// Generated by L3P v1.4 BETA 20080930 (MacOSX i386)  (C) 1998-2008 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Tue Dec 11 19:22:32 2012
// Input file:   /Users/Irmo/Dropbox/SE3 Shared/7 WiSe 12/IVC/Gruppe Bornholdt-Frede-Timmann/MLCadHat.ldr
// Title:        Untitled
// Author:       MLCad
// ModelDir:     /Users/Irmo/Dropbox/SE3 Shared/7 WiSe 12/IVC/Gruppe Bornholdt-Frede-Timmann
// WorkDir:      /
// LDRAWDIR:     /Applications/IVC/ldraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   /Users/Irmo/Dropbox/SE3 Shared/7 WiSe 12/IVC/Gruppe Bornholdt-Frede-Timmann/ (0x10)
// SearchDir2:   /Applications/IVC/ldraw/P/ (0x9)
// SearchDir3:   /Applications/IVC/ldraw/PARTS/ (0x4)
// SearchDir4:   /Applications/IVC/ldraw/MODELS/ (0x0)
// LGEODIR:      /Applications/IVC/lgeo (LGEODIR environment variable)
// ldconfig.ldr: /Applications/IVC/ldraw/ldconfig.ldr
// Commandline:  "/Applications/IVC/L3P_Launcher_.9/L3P Launcher.app/Contents/Resources/l3p" "/Users/Irmo/Dropbox/SE3 Shared/7 WiSe 12/IVC/Gruppe Bornholdt-Frede-Timmann/MLCadHat.ldr" "/Users/Irmo/Dropbox/SE3 Shared/7 WiSe 12/IVC/Gruppe Bornholdt-Frede-Timmann/MLCadHat.pov" -o -lgeo -cg30,45,0

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


#declare lg_quality = L3Quality;
#declare lg_studs = L3Studs;

#include "lg_defs.inc"
#include "lg_color.inc"

#declare L3LDrawToLgeo = transform { matrix <0,-LG_BRICK_WIDTH/20,0, 0,0,-LG_BRICK_HEIGHT/24, -LG_BRICK_WIDTH/20,0,0, 0,0,4*LG_BRICK_HEIGHT/24> }
#declare L3LgeoToLDraw = transform { matrix <0,0,-20/LG_BRICK_WIDTH, -20/LG_BRICK_WIDTH,0,0, 0,-24/LG_BRICK_HEIGHT,0, 0,0,0> }




//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish { lg_solid_finish }
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish { lg_chrome_finish }
#end

#ifndef (L3FinishPearlescent)
#declare L3FinishPearlescent = finish { lg_pearl_finish }
#end

#ifndef (L3FinishRubber)
//Not supported in LGEO, using Opaque
#declare L3FinishRubber = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMatte_metallic)
//Not supported in LGEO, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported in LGEO, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish { lg_transparent_finish }
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { lg_ior }
	#end
}
#end
#end



//// Color 7 Light_Gray (from lg_color.inc)
#ifndef (L3Texture7)
#declare L3Texture7 = texture { lg_grey }
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Color 484 Dark_Orange (from lg_color.inc)
#ifndef (L3Texture484)
#declare L3Texture484 = texture { lg_dark_orange }
#end
#ifndef (L3Texture484_slope)
#declare L3Texture484_slope = L3TextureSlope(L3Texture484)
#end
#ifndef (L3Color484)
#declare L3Color484 = L3Material(L3Texture484)
#end
#ifndef (L3Color484_slope)
#declare L3Color484_slope = L3Material(L3Texture484_slope)
#end


//// Part s/61506s01.dat
#ifndef (s_slash_61506s01_dot_dat)
#declare s_slash_61506s01_dot_dat = #if (L3Quality = 0) box { <-25.5,-8.22,0>, <25.5,16.5,23.5> } #else object {
// ~Minifig Hat Fedora Half
// Name: s\61506s01.dat
// Author: Philippe Hurbain [Philo]
// !LDRAW_ORG Subpart UPDATE 2012-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2012-08-09 [PTadmin] Official Update 2012-02
	mesh {
		triangle { <-13.6,5.5,0>, <-12.88,0,0>, <-12.69,0,2.21> }
		triangle { <-12.69,0,2.21>, <-13.4,5.5,2.3>, <-13.6,5.5,0> }
		triangle { <13.5,11.56,3.2>, <11.78,6.06,3.07>, <11.97,6.11,0> }
		triangle { <11.97,6.11,0>, <13.7,11.61,0>, <13.5,11.56,3.2> }
		triangle { <11.33,5.92,4.8>, <11.78,6.06,3.07>, <13.5,11.56,3.2> }
		triangle { <13,11.42,5>, <11.33,5.92,4.8>, <13.5,11.56,3.2> }
		triangle { <10.33,5.61,7.1>, <11.33,5.92,4.8>, <13,11.42,5> }
		triangle { <11.9,11.11,7.4>, <10.33,5.61,7.1>, <13,11.42,5> }
		triangle { <9.15,5.23,9.02>, <10.33,5.61,7.1>, <11.9,11.11,7.4> }
		triangle { <10.6,10.73,9.4>, <9.15,5.23,9.02>, <11.9,11.11,7.4> }
		triangle { <7.69,4.75,10.66>, <9.15,5.23,9.02>, <10.6,10.73,9.4> }
		triangle { <9,10.24,11.1>, <7.69,4.75,10.66>, <10.6,10.73,9.4> }
		triangle { <6.05,4.2,11.81>, <7.69,4.75,10.66>, <9,10.24,11.1> }
		triangle { <7.2,9.7,12.3>, <6.05,4.2,11.81>, <9,10.24,11.1> }
		triangle { <-8.6,0.26,8.74>, <-6.96,0.5,10.08>, <-7.1,6,10.5> }
		triangle { <-8.9,5.76,9.1>, <-8.6,0.26,8.74>, <-7.1,6,10.5> }
		triangle { <-10.15,0.13,7.01>, <-8.6,0.26,8.74>, <-8.9,5.76,9.1> }
		triangle { <-10.6,5.63,7.3>, <-10.15,0.13,7.01>, <-8.9,5.76,9.1> }
		triangle { <-11.15,0.07,5.57>, <-10.15,0.13,7.01>, <-10.6,5.63,7.3> }
		triangle { <-11.7,5.57,5.8>, <-11.15,0.07,5.57>, <-10.6,5.63,7.3> }
		triangle { <-12.06,0.02,4.03>, <-11.15,0.07,5.57>, <-11.7,5.57,5.8> }
		triangle { <-12.7,5.52,4.2>, <-12.06,0.02,4.03>, <-11.7,5.57,5.8> }
		triangle { <-12.69,0,2.21>, <-12.06,0.02,4.03>, <-12.7,5.52,4.2> }
		triangle { <-13.4,5.5,2.3>, <-12.69,0,2.21>, <-12.7,5.52,4.2> }
		triangle { <-12.06,0,2.1>, <-12.69,0,2.21>, <-12.88,0,0> }
		triangle { <-12.88,0,0>, <-12.23,0,0>, <-12.06,0,2.1> }
		triangle { <11.37,6.11,0>, <11.97,6.11,0>, <11.78,6.06,3.07> }
		triangle { <11.78,6.06,3.07>, <11.2,6.06,2.92>, <11.37,6.11,0> }
		triangle { <11.2,6.06,2.92>, <11.78,6.06,3.07>, <11.33,5.92,4.8> }
		triangle { <11.2,6.06,2.92>, <11.33,5.92,4.8>, <10.76,5.92,4.56> }
		triangle { <10.76,5.92,4.56>, <11.33,5.92,4.8>, <10.33,5.61,7.1> }
		triangle { <10.76,5.92,4.56>, <10.33,5.61,7.1>, <9.81,5.61,6.75> }
		triangle { <9.81,5.61,6.75>, <10.33,5.61,7.1>, <9.15,5.23,9.02> }
		triangle { <9.81,5.61,6.75>, <9.15,5.23,9.02>, <8.69,5.23,8.57> }
		triangle { <8.69,5.23,8.57>, <9.15,5.23,9.02>, <7.69,4.75,10.66> }
		triangle { <8.69,5.23,8.57>, <7.69,4.75,10.66>, <7.31,4.75,10.12> }
		triangle { <7.31,4.75,10.12>, <7.69,4.75,10.66>, <6.05,4.2,11.81> }
		triangle { <7.31,4.75,10.12>, <6.05,4.2,11.81>, <5.75,4.2,11.22> }
		triangle { <5.75,4.2,11.22>, <6.05,4.2,11.81>, <4.05,3.55,12.67> }
		triangle { <3.85,3.55,12.04>, <5.75,4.2,11.22>, <4.05,3.55,12.67> }
		triangle { <3.85,3.55,12.04>, <4.05,3.55,12.67>, <1.59,2.77,13.06> }
		triangle { <3.85,3.55,12.04>, <1.59,2.77,13.06>, <1.51,2.77,12.4> }
		triangle { <1.51,2.77,12.4>, <1.59,2.77,13.06>, <-0.5,2.14,12.86> }
		triangle { <1.51,2.77,12.4>, <-0.5,2.14,12.86>, <-0.47,2.14,12.22> }
		triangle { <-0.47,2.14,12.22>, <-0.5,2.14,12.86>, <-3.05,1.42,12.19> }
		triangle { <-0.47,2.14,12.22>, <-3.05,1.42,12.19>, <-2.9,1.42,11.58> }
		triangle { <-2.9,1.42,11.58>, <-3.05,1.42,12.19>, <-5.23,0.86,11.14> }
		triangle { <-2.9,1.42,11.58>, <-5.23,0.86,11.14>, <-4.97,0.86,10.58> }
		triangle { <-4.97,0.86,10.58>, <-5.23,0.86,11.14>, <-6.96,0.5,10.08> }
		triangle { <-4.97,0.86,10.58>, <-6.96,0.5,10.08>, <-6.61,0.5,9.58> }
		triangle { <-6.61,0.5,9.58>, <-6.96,0.5,10.08>, <-8.6,0.26,8.74> }
		triangle { <-6.61,0.5,9.58>, <-8.6,0.26,8.74>, <-8.17,0.26,8.3> }
		triangle { <-8.17,0.26,8.3>, <-8.6,0.26,8.74>, <-10.15,0.13,7.01> }
		triangle { <-8.17,0.26,8.3>, <-10.15,0.13,7.01>, <-9.64,0.13,6.66> }
		triangle { <-9.64,0.13,6.66>, <-10.15,0.13,7.01>, <-11.15,0.07,5.57> }
		triangle { <-9.64,0.13,6.66>, <-11.15,0.07,5.57>, <-10.59,0.07,5.29> }
		triangle { <-10.59,0.07,5.29>, <-11.15,0.07,5.57>, <-12.06,0.02,4.03> }
		triangle { <-12.06,0.02,4.03>, <-11.45,0.02,3.83>, <-10.59,0.07,5.29> }
		triangle { <-11.45,0.02,3.83>, <-12.06,0.02,4.03>, <-12.69,0,2.21> }
		triangle { <-12.69,0,2.21>, <-12.06,0,2.1>, <-11.45,0.02,3.83> }
		triangle { <2.3,8.27,13.6>, <2.78,8.42,15.78>, <0,7.64,13.4> }
		triangle { <2.78,8.42,15.78>, <0,7.64,15.71>, <0,7.64,13.4> }
		triangle { <3.94,8.75,20.96>, <4.43,8.89,23.14>, <0,7.64,23.5> }
		triangle { <0,7.64,21.19>, <3.94,8.75,20.96>, <0,7.64,23.5> }
		triangle { <2.78,8.42,15.78>, <3.33,8.58,18.23>, <0,7.64,18.31> }
		triangle { <0,7.64,15.71>, <2.78,8.42,15.78>, <0,7.64,18.31> }
		triangle { <3.33,8.58,18.23>, <3.94,8.75,20.96>, <0,7.64,21.19> }
		triangle { <0,7.64,21.19>, <0,7.64,18.31>, <3.33,8.58,18.23> }
		triangle { <5,9.05,13.2>, <5.84,9.33,15.23>, <2.3,8.27,13.6> }
		triangle { <5.84,9.33,15.23>, <2.78,8.42,15.78>, <2.3,8.27,13.6> }
		triangle { <7.86,9.94,20.05>, <8.72,10.16,22.08>, <4.43,8.89,23.14> }
		triangle { <3.94,8.75,20.96>, <7.86,9.94,20.05>, <4.43,8.89,23.14> }
		triangle { <5.84,9.33,15.23>, <6.8,9.63,17.52>, <3.33,8.58,18.23> }
		triangle { <2.78,8.42,15.78>, <5.84,9.33,15.23>, <3.33,8.58,18.23> }
		triangle { <6.8,9.63,17.52>, <7.86,9.94,20.05>, <3.94,8.75,20.96> }
		triangle { <3.94,8.75,20.96>, <3.33,8.58,18.23>, <6.8,9.63,17.52> }
		triangle { <7.2,9.7,12.3>, <8.44,10.16,14.14>, <5,9.05,13.2> }
		triangle { <8.44,10.16,14.14>, <5.84,9.33,15.23>, <5,9.05,13.2> }
		triangle { <11.46,11.06,18.51>, <12.75,11.35,20.35>, <8.72,10.16,22.08> }
		triangle { <7.86,9.94,20.05>, <11.46,11.06,18.51>, <8.72,10.16,22.08> }
		triangle { <5.84,9.33,15.23>, <8.44,10.16,14.14>, <9.87,10.61,16.21> }
		triangle { <9.87,10.61,16.21>, <6.8,9.63,17.52>, <5.84,9.33,15.23> }
		triangle { <9.87,10.61,16.21>, <11.46,11.06,18.51>, <6.8,9.63,17.52> }
		triangle { <11.46,11.06,18.51>, <7.86,9.94,20.05>, <6.8,9.63,17.52> }
		triangle { <9,10.24,11.1>, <10.63,10.93,12.68>, <7.2,9.7,12.3> }
		triangle { <10.63,10.93,12.68>, <8.44,10.16,14.14>, <7.2,9.7,12.3> }
		triangle { <14.64,12.07,16.42>, <16.39,12.34,18>, <12.75,11.35,20.35> }
		triangle { <11.46,11.06,18.51>, <14.64,12.07,16.42>, <12.75,11.35,20.35> }
		triangle { <10.63,10.93,12.68>, <12.52,11.52,14.45>, <9.87,10.61,16.21> }
		triangle { <8.44,10.16,14.14>, <10.63,10.93,12.68>, <9.87,10.61,16.21> }
		triangle { <12.52,11.52,14.45>, <14.64,12.07,16.42>, <9.87,10.61,16.21> }
		triangle { <14.64,12.07,16.42>, <11.46,11.06,18.51>, <9.87,10.61,16.21> }
		triangle { <10.6,10.73,9.4>, <12.54,11.66,10.7>, <9,10.24,11.1> }
		triangle { <12.54,11.66,10.7>, <10.63,10.93,12.68>, <9,10.24,11.1> }
		triangle { <17.39,12.95,13.8>, <19.53,13.11,15.11>, <16.39,12.34,18> }
		triangle { <14.64,12.07,16.42>, <17.39,12.95,13.8>, <16.39,12.34,18> }
		triangle { <12.54,11.66,10.7>, <14.81,12.36,12.17>, <12.52,11.52,14.45> }
		triangle { <10.63,10.93,12.68>, <12.54,11.66,10.7>, <12.52,11.52,14.45> }
		triangle { <14.81,12.36,12.17>, <17.39,12.95,13.8>, <12.52,11.52,14.45> }
		triangle { <17.39,12.95,13.8>, <14.64,12.07,16.42>, <12.52,11.52,14.45> }
		triangle { <11.9,11.11,7.4>, <14.1,12.21,8.39>, <10.6,10.73,9.4> }
		triangle { <14.1,12.21,8.39>, <12.54,11.66,10.7>, <10.6,10.73,9.4> }
		triangle { <19.63,13.57,10.75>, <22.08,13.6,11.75>, <19.53,13.11,15.11> }
		triangle { <17.39,12.95,13.8>, <19.63,13.57,10.75>, <19.53,13.11,15.11> }
		triangle { <14.1,12.21,8.39>, <16.69,12.99,9.51>, <14.81,12.36,12.17> }
		triangle { <12.54,11.66,10.7>, <14.1,12.21,8.39>, <14.81,12.36,12.17> }
		triangle { <16.69,12.99,9.51>, <19.63,13.57,10.75>, <14.81,12.36,12.17> }
		triangle { <19.63,13.57,10.75>, <17.39,12.95,13.8>, <14.81,12.36,12.17> }
		triangle { <13,11.42,5>, <15.37,12.59,5.69>, <11.9,11.11,7.4> }
		triangle { <15.37,12.59,5.69>, <14.1,12.21,8.39>, <11.9,11.11,7.4> }
		triangle { <21.32,13.92,7.34>, <23.96,13.86,8.04>, <22.08,13.6,11.75> }
		triangle { <19.63,13.57,10.75>, <21.32,13.92,7.34>, <22.08,13.6,11.75> }
		triangle { <15.37,12.59,5.69>, <18.16,13.37,6.47>, <16.69,12.99,9.51> }
		triangle { <14.1,12.21,8.39>, <15.37,12.59,5.69>, <16.69,12.99,9.51> }
		triangle { <18.16,13.37,6.47>, <21.32,13.92,7.34>, <16.69,12.99,9.51> }
		triangle { <21.32,13.92,7.34>, <19.63,13.57,10.75>, <16.69,12.99,9.51> }
		triangle { <13.5,11.56,3.2>, <16.02,12.77,3.4>, <15.37,12.59,5.69> }
		triangle { <15.37,12.59,5.69>, <13,11.42,5>, <13.5,11.56,3.2> }
		triangle { <22.32,14.1,3.88>, <25.11,14,4.08>, <23.96,13.86,8.04> }
		triangle { <21.32,13.92,7.34>, <22.32,14.1,3.88>, <23.96,13.86,8.04> }
		triangle { <16.02,12.77,3.4>, <18.97,13.56,3.62>, <18.16,13.37,6.47> }
		triangle { <15.37,12.59,5.69>, <16.02,12.77,3.4>, <18.16,13.37,6.47> }
		triangle { <18.97,13.56,3.62>, <22.32,14.1,3.88>, <18.16,13.37,6.47> }
		triangle { <22.32,14.1,3.88>, <21.32,13.92,7.34>, <18.16,13.37,6.47> }
		triangle { <13.7,11.61,0>, <16.26,12.84,0>, <13.5,11.56,3.2> }
		triangle { <16.26,12.84,0>, <16.02,12.77,3.4>, <13.5,11.56,3.2> }
		triangle { <22.66,14.15,0>, <25.5,14.03,0>, <25.11,14,4.08> }
		triangle { <22.32,14.1,3.88>, <22.66,14.15,0>, <25.11,14,4.08> }
		triangle { <16.26,12.84,0>, <19.26,13.63,0>, <18.97,13.56,3.62> }
		triangle { <16.02,12.77,3.4>, <16.26,12.84,0>, <18.97,13.56,3.62> }
		triangle { <19.26,13.63,0>, <22.66,14.15,0>, <18.97,13.56,3.62> }
		triangle { <22.66,14.15,0>, <22.32,14.1,3.88>, <18.97,13.56,3.62> }
		triangle { <-2.8,6.91,12.7>, <0,7.64,13.4>, <0,7.64,23.5> }
		triangle { <-5.2,6.36,11.6>, <-2.8,6.91,12.7>, <0,7.64,23.5> }
		triangle { <-7.1,6,10.5>, <-5.2,6.36,11.6>, <0,7.64,23.5> }
		triangle { <-4.43,6.54,23.14>, <-7.1,6,10.5>, <0,7.64,23.5> }
		triangle { <-8.9,5.76,9.1>, <-7.1,6,10.5>, <-4.43,6.54,23.14> }
		triangle { <-10.6,5.63,7.3>, <-8.9,5.76,9.1>, <-4.43,6.54,23.14> }
		triangle { <-8.72,5.77,22.08>, <-10.6,5.63,7.3>, <-4.43,6.54,23.14> }
		triangle { <-11.7,5.57,5.8>, <-10.6,5.63,7.3>, <-8.72,5.77,22.08> }
		triangle { <-12.7,5.52,4.2>, <-11.7,5.57,5.8>, <-8.72,5.77,22.08> }
		triangle { <-12.75,5.52,20.35>, <-12.7,5.52,4.2>, <-8.72,5.77,22.08> }
		triangle { <-13.4,5.5,2.3>, <-12.7,5.52,4.2>, <-12.75,5.52,20.35> }
		triangle { <-13.6,5.5,0>, <-13.4,5.5,2.3>, <-12.75,5.52,20.35> }
		triangle { <-12.75,5.52,20.35>, <-16.39,5.54,18>, <-13.6,5.5,0> }
		triangle { <-16.39,5.54,0>, <-13.6,5.5,0>, <-16.39,5.54,18> }
		triangle { <-19.53,5.75,0>, <-16.39,5.54,0>, <-16.39,5.54,18> }
		triangle { <-16.39,5.54,18>, <-19.53,5.75,15.11>, <-19.53,5.75,0> }
		triangle { <-22.08,6.23,0>, <-19.53,5.75,0>, <-19.53,5.75,15.11> }
		triangle { <-19.53,5.75,15.11>, <-22.08,6.23,11.75>, <-22.08,6.23,0> }
		triangle { <-23.96,6.85,0>, <-22.08,6.23,0>, <-22.08,6.23,11.75> }
		triangle { <-22.08,6.23,11.75>, <-23.96,6.85,8.04>, <-23.96,6.85,0> }
		triangle { <-25.11,7.38,0>, <-23.96,6.85,0>, <-23.96,6.85,8.04> }
		triangle { <-23.96,6.85,8.04>, <-25.11,7.38,4.08>, <-25.11,7.38,0> }
		triangle { <-25.5,7.56,0>, <-25.11,7.38,0>, <-25.11,7.38,4.08> }
		triangle { <25.11,16,4.08>, <23.96,15.86,8.04>, <23.96,13.86,8.04> }
		triangle { <23.96,13.86,8.04>, <25.11,14,4.08>, <25.11,16,4.08> }
		triangle { <23.96,15.86,8.04>, <22.08,15.6,11.75>, <22.08,13.6,11.75> }
		triangle { <22.08,13.6,11.75>, <23.96,13.86,8.04>, <23.96,15.86,8.04> }
		triangle { <22.08,15.6,11.75>, <19.53,15.11,15.11>, <19.53,13.11,15.11> }
		triangle { <19.53,13.11,15.11>, <22.08,13.6,11.75>, <22.08,15.6,11.75> }
		triangle { <19.53,15.11,15.11>, <16.39,14.34,18>, <16.39,12.34,18> }
		triangle { <16.39,12.34,18>, <19.53,13.11,15.11>, <19.53,15.11,15.11> }
		triangle { <16.39,14.34,18>, <12.75,13.35,20.35>, <12.75,11.35,20.35> }
		triangle { <12.75,11.35,20.35>, <16.39,12.34,18>, <16.39,14.34,18> }
		triangle { <12.75,13.35,20.35>, <8.72,12.16,22.08>, <8.72,10.16,22.08> }
		triangle { <8.72,10.16,22.08>, <12.75,11.35,20.35>, <12.75,13.35,20.35> }
		triangle { <8.72,12.16,22.08>, <4.43,10.89,23.14>, <4.43,8.89,23.14> }
		triangle { <4.43,8.89,23.14>, <8.72,10.16,22.08>, <8.72,12.16,22.08> }
		triangle { <4.43,10.89,23.14>, <0,9.64,23.5>, <0,7.64,23.5> }
		triangle { <0,7.64,23.5>, <4.43,8.89,23.14>, <4.43,10.89,23.14> }
		triangle { <0,9.64,23.5>, <-4.43,8.54,23.14>, <-4.43,6.54,23.14> }
		triangle { <-4.43,6.54,23.14>, <0,7.64,23.5>, <0,9.64,23.5> }
		triangle { <-4.43,8.54,23.14>, <-8.72,7.77,22.08>, <-8.72,5.77,22.08> }
		triangle { <-8.72,5.77,22.08>, <-4.43,6.54,23.14>, <-4.43,8.54,23.14> }
		triangle { <-8.72,7.77,22.08>, <-12.75,7.52,20.35>, <-12.75,5.52,20.35> }
		triangle { <-12.75,5.52,20.35>, <-8.72,5.77,22.08>, <-8.72,7.77,22.08> }
		triangle { <-12.75,7.52,20.35>, <-16.39,7.54,18>, <-16.39,5.54,18> }
		triangle { <-16.39,5.54,18>, <-12.75,5.52,20.35>, <-12.75,7.52,20.35> }
		triangle { <-16.39,7.54,18>, <-19.53,7.75,15.11>, <-19.53,5.75,15.11> }
		triangle { <-19.53,5.75,15.11>, <-16.39,5.54,18>, <-16.39,7.54,18> }
		triangle { <-19.53,7.75,15.11>, <-22.08,8.23,11.75>, <-22.08,6.23,11.75> }
		triangle { <-22.08,6.23,11.75>, <-19.53,5.75,15.11>, <-19.53,7.75,15.11> }
		triangle { <-22.08,8.23,11.75>, <-23.96,8.85,8.04>, <-23.96,6.85,8.04> }
		triangle { <-23.96,6.85,8.04>, <-22.08,6.23,11.75>, <-22.08,8.23,11.75> }
		triangle { <-23.96,8.85,8.04>, <-25.11,9.38,4.08>, <-25.11,7.38,4.08> }
		triangle { <-25.11,7.38,4.08>, <-23.96,6.85,8.04>, <-23.96,8.85,8.04> }
		triangle { <-25.11,9.38,4.08>, <-25.5,9.56,0>, <-25.5,7.56,0> }
		triangle { <-25.5,7.56,0>, <-25.11,7.38,4.08>, <-25.11,9.38,4.08> }
		triangle { <25.5,16.03,0>, <25.11,16,4.08>, <25.11,14,4.08> }
		triangle { <25.11,14,4.08>, <25.5,14.03,0>, <25.5,16.03,0> }
		triangle { <-2.31,9.03,13.1>, <0,9.64,23.5>, <0,9.64,13.3> }
		triangle { <-4.55,8.51,12.5>, <0,9.64,23.5>, <-2.31,9.03,13.1> }
		triangle { <-6.65,8.07,11.52>, <0,9.64,23.5>, <-4.55,8.51,12.5> }
		triangle { <-4.43,8.54,23.14>, <0,9.64,23.5>, <-6.65,8.07,11.52> }
		triangle { <-8.55,7.78,10.19>, <-4.43,8.54,23.14>, <-6.65,8.07,11.52> }
		triangle { <-10.19,7.66,8.55>, <-4.43,8.54,23.14>, <-8.55,7.78,10.19> }
		triangle { <-8.72,7.77,22.08>, <-4.43,8.54,23.14>, <-10.19,7.66,8.55> }
		triangle { <-11.52,7.58,6.65>, <-8.72,7.77,22.08>, <-10.19,7.66,8.55> }
		triangle { <-12.5,7.53,4.55>, <-8.72,7.77,22.08>, <-11.52,7.58,6.65> }
		triangle { <-12.75,7.52,20.35>, <-8.72,7.77,22.08>, <-12.5,7.53,4.55> }
		triangle { <-13.1,7.5,2.31>, <-12.75,7.52,20.35>, <-12.5,7.53,4.55> }
		triangle { <-13.3,7.5,0>, <-16.39,7.54,18>, <-12.75,7.52,20.35> }
		triangle { <-12.75,7.52,20.35>, <-13.1,7.5,2.31>, <-13.3,7.5,0> }
		triangle { <-16.39,7.54,0>, <-16.39,7.54,18>, <-13.3,7.5,0> }
		triangle { <-19.53,7.75,0>, <-19.53,7.75,15.11>, <-16.39,7.54,18> }
		triangle { <-16.39,7.54,18>, <-16.39,7.54,0>, <-19.53,7.75,0> }
		triangle { <-22.08,8.23,0>, <-22.08,8.23,11.75>, <-19.53,7.75,15.11> }
		triangle { <-19.53,7.75,15.11>, <-19.53,7.75,0>, <-22.08,8.23,0> }
		triangle { <-23.96,8.85,0>, <-23.96,8.85,8.04>, <-22.08,8.23,11.75> }
		triangle { <-22.08,8.23,11.75>, <-22.08,8.23,0>, <-23.96,8.85,0> }
		triangle { <-25.11,9.38,0>, <-25.11,9.38,4.08>, <-23.96,8.85,8.04> }
		triangle { <-23.96,8.85,8.04>, <-23.96,8.85,0>, <-25.11,9.38,0> }
		triangle { <-25.5,9.56,0>, <-25.11,9.38,4.08>, <-25.11,9.38,0> }
		triangle { <0,9.64,13.3>, <2.79,10.43,15.39>, <2.31,10.28,13.1> }
		triangle { <0,9.64,13.3>, <0,9.64,15.63>, <2.79,10.43,15.39> }
		triangle { <0,9.64,23.5>, <4.43,10.89,23.14>, <3.94,10.76,20.85> }
		triangle { <0,9.64,23.5>, <3.94,10.76,20.85>, <0,9.64,21.17> }
		triangle { <0,9.64,18.25>, <3.33,10.59,17.98>, <2.79,10.43,15.39> }
		triangle { <0,9.64,18.25>, <2.79,10.43,15.39>, <0,9.64,15.63> }
		triangle { <0,9.64,18.25>, <0,9.64,21.17>, <3.94,10.76,20.85> }
		triangle { <3.94,10.76,20.85>, <3.33,10.59,17.98>, <0,9.64,18.25> }
		triangle { <2.31,10.28,13.1>, <5.49,11.25,14.69>, <4.55,10.92,12.5> }
		triangle { <2.31,10.28,13.1>, <2.79,10.43,15.39>, <5.49,11.25,14.69> }
		triangle { <4.43,10.89,23.14>, <8.72,12.16,22.08>, <7.75,11.92,19.89> }
		triangle { <4.43,10.89,23.14>, <7.75,11.92,19.89>, <3.94,10.76,20.85> }
		triangle { <3.33,10.59,17.98>, <6.56,11.58,17.15>, <5.49,11.25,14.69> }
		triangle { <3.33,10.59,17.98>, <5.49,11.25,14.69>, <2.79,10.43,15.39> }
		triangle { <3.33,10.59,17.98>, <7.75,11.92,19.89>, <6.56,11.58,17.15> }
		triangle { <3.33,10.59,17.98>, <3.94,10.76,20.85>, <7.75,11.92,19.89> }
		triangle { <4.55,10.92,12.5>, <8,12.09,13.54>, <6.65,11.54,11.52> }
		triangle { <4.55,10.92,12.5>, <5.49,11.25,14.69>, <8,12.09,13.54> }
		triangle { <8.72,12.16,22.08>, <12.75,13.35,20.35>, <11.31,13.07,18.33> }
		triangle { <8.72,12.16,22.08>, <11.31,13.07,18.33>, <7.75,11.92,19.89> }
		triangle { <6.56,11.58,17.15>, <9.56,12.59,15.81>, <8,12.09,13.54> }
		triangle { <6.56,11.58,17.15>, <8,12.09,13.54>, <5.49,11.25,14.69> }
		triangle { <6.56,11.58,17.15>, <11.31,13.07,18.33>, <9.56,12.59,15.81> }
		triangle { <6.56,11.58,17.15>, <7.75,11.92,19.89>, <11.31,13.07,18.33> }
		triangle { <6.65,11.54,11.52>, <10.25,12.96,11.97>, <8.55,12.11,10.19> }
		triangle { <6.65,11.54,11.52>, <8,12.09,13.54>, <10.25,12.96,11.97> }
		triangle { <12.75,13.35,20.35>, <16.39,14.34,18>, <14.5,14.17,16.21> }
		triangle { <12.75,13.35,20.35>, <14.5,14.17,16.21>, <11.31,13.07,18.33> }
		triangle { <9.56,12.59,15.81>, <12.24,13.62,13.98>, <10.25,12.96,11.97> }
		triangle { <9.56,12.59,15.81>, <10.25,12.96,11.97>, <8,12.09,13.54> }
		triangle { <9.56,12.59,15.81>, <14.5,14.17,16.21>, <12.24,13.62,13.98> }
		triangle { <9.56,12.59,15.81>, <11.31,13.07,18.33>, <14.5,14.17,16.21> }
		triangle { <8.55,12.11,10.19>, <12.16,13.79,10.05>, <10.19,12.6,8.55> }
		triangle { <8.55,12.11,10.19>, <10.25,12.96,11.97>, <12.16,13.79,10.05> }
		triangle { <16.39,14.34,18>, <19.53,15.11,15.11>, <17.23,15.15,13.61> }
		triangle { <16.39,14.34,18>, <17.23,15.15,13.61>, <14.5,14.17,16.21> }
		triangle { <12.24,13.62,13.98>, <14.53,14.59,11.73>, <12.16,13.79,10.05> }
		triangle { <12.24,13.62,13.98>, <12.16,13.79,10.05>, <10.25,12.96,11.97> }
		triangle { <12.24,13.62,13.98>, <17.23,15.15,13.61>, <14.53,14.59,11.73> }
		triangle { <12.24,13.62,13.98>, <14.5,14.17,16.21>, <17.23,15.15,13.61> }
		triangle { <10.19,12.6,8.55>, <13.73,14.45,7.81>, <11.52,13.01,6.65> }
		triangle { <10.19,12.6,8.55>, <12.16,13.79,10.05>, <13.73,14.45,7.81> }
		triangle { <19.53,15.11,15.11>, <22.08,15.6,11.75>, <19.46,15.86,10.58> }
		triangle { <19.53,15.11,15.11>, <19.46,15.86,10.58>, <17.23,15.15,13.61> }
		triangle { <14.53,14.59,11.73>, <16.4,15.33,9.12>, <13.73,14.45,7.81> }
		triangle { <14.53,14.59,11.73>, <13.73,14.45,7.81>, <12.16,13.79,10.05> }
		triangle { <14.53,14.59,11.73>, <19.46,15.86,10.58>, <16.4,15.33,9.12> }
		triangle { <14.53,14.59,11.73>, <17.23,15.15,13.61>, <19.46,15.86,10.58> }
		triangle { <11.52,13.01,6.65>, <14.9,14.84,5.34>, <12.5,13.28,4.55> }
		triangle { <11.52,13.01,6.65>, <13.73,14.45,7.81>, <14.9,14.84,5.34> }
		triangle { <22.08,15.6,11.75>, <23.96,15.86,8.04>, <21.13,16.24,7.23> }
		triangle { <22.08,15.6,11.75>, <21.13,16.24,7.23>, <19.46,15.86,10.58> }
		triangle { <16.4,15.33,9.12>, <17.8,15.75,6.23>, <14.9,14.84,5.34> }
		triangle { <16.4,15.33,9.12>, <14.9,14.84,5.34>, <13.73,14.45,7.81> }
		triangle { <16.4,15.33,9.12>, <21.13,16.24,7.23>, <17.8,15.75,6.23> }
		triangle { <16.4,15.33,9.12>, <19.46,15.86,10.58>, <21.13,16.24,7.23> }
		triangle { <12.5,13.28,4.55>, <15.63,15.06,2.71>, <13.1,13.45,2.31> }
		triangle { <12.5,13.28,4.55>, <14.9,14.84,5.34>, <15.63,15.06,2.71> }
		triangle { <23.96,15.86,8.04>, <25.11,16,4.08>, <22.15,16.44,3.67> }
		triangle { <23.96,15.86,8.04>, <22.15,16.44,3.67>, <21.13,16.24,7.23> }
		triangle { <17.8,15.75,6.23>, <18.66,15.97,3.16>, <15.63,15.06,2.71> }
		triangle { <17.8,15.75,6.23>, <15.63,15.06,2.71>, <14.9,14.84,5.34> }
		triangle { <17.8,15.75,6.23>, <22.15,16.44,3.67>, <18.66,15.97,3.16> }
		triangle { <17.8,15.75,6.23>, <21.13,16.24,7.23>, <22.15,16.44,3.67> }
		triangle { <13.1,13.45,2.31>, <15.63,15.06,2.71>, <15.87,15.13,0> }
		triangle { <15.87,15.13,0>, <13.3,13.5,0>, <13.1,13.45,2.31> }
		triangle { <25.11,16,4.08>, <25.5,16.03,0>, <22.49,16.5,0> }
		triangle { <25.11,16,4.08>, <22.49,16.5,0>, <22.15,16.44,3.67> }
		triangle { <18.66,15.97,3.16>, <18.95,16.04,0>, <15.87,15.13,0> }
		triangle { <18.66,15.97,3.16>, <15.87,15.13,0>, <15.63,15.06,2.71> }
		triangle { <18.66,15.97,3.16>, <22.49,16.5,0>, <18.95,16.04,0> }
		triangle { <18.66,15.97,3.16>, <22.15,16.44,3.67>, <22.49,16.5,0> }
		triangle { <13.3,13.5,0>, <11.5,6.5,0>, <13.1,13.45,2.31> }
		triangle { <13.1,13.45,2.31>, <11.5,6.5,0>, <12.5,13.28,4.55> }
		triangle { <12.5,13.28,4.55>, <11.5,6.5,0>, <10.59,6.5,4.59> }
		triangle { <12.5,13.28,4.55>, <10.59,6.5,4.59>, <11.52,13.01,6.65> }
		triangle { <11.52,13.01,6.65>, <10.59,6.5,4.59>, <10.19,12.6,8.55> }
		triangle { <10.19,12.6,8.55>, <10.59,6.5,4.59>, <7.99,6.5,8.48> }
		triangle { <10.19,12.6,8.55>, <7.99,6.5,8.48>, <8.55,12.11,10.19> }
		triangle { <8.55,12.11,10.19>, <7.99,6.5,8.48>, <6.65,11.54,11.52> }
		triangle { <6.65,11.54,11.52>, <7.99,6.5,8.48>, <4.09,6.5,11.09> }
		triangle { <6.65,11.54,11.52>, <4.09,6.5,11.09>, <4.55,10.92,12.5> }
		triangle { <4.55,10.92,12.5>, <4.09,6.5,11.09>, <2.31,10.28,13.1> }
		triangle { <2.31,10.28,13.1>, <4.09,6.5,11.09>, <-0.5,6.5,12> }
		triangle { <2.31,10.28,13.1>, <-0.5,6.5,12>, <0,9.64,13.3> }
		triangle { <0,9.64,13.3>, <-0.5,6.5,12>, <-2.31,9.03,13.1> }
		triangle { <-2.31,9.03,13.1>, <-0.5,6.5,12>, <-4.55,8.51,12.5> }
		triangle { <-4.55,8.51,12.5>, <-0.5,6.5,12>, <-5.09,6.5,11.09> }
		triangle { <-4.55,8.51,12.5>, <-5.09,6.5,11.09>, <-6.65,8.07,11.52> }
		triangle { <-6.65,8.07,11.52>, <-5.09,6.5,11.09>, <-8.55,7.78,10.19> }
		triangle { <-8.55,7.78,10.19>, <-5.09,6.5,11.09>, <-8.98,6.5,8.48> }
		triangle { <-8.55,7.78,10.19>, <-8.98,6.5,8.48>, <-10.19,7.66,8.55> }
		triangle { <-10.19,7.66,8.55>, <-8.98,6.5,8.48>, <-11.52,7.58,6.65> }
		triangle { <-11.52,7.58,6.65>, <-8.98,6.5,8.48>, <-11.59,6.5,4.59> }
		triangle { <-11.52,7.58,6.65>, <-11.59,6.5,4.59>, <-12.5,7.53,4.55> }
		triangle { <-12.5,7.53,4.55>, <-11.59,6.5,4.59>, <-13.1,7.5,2.31> }
		triangle { <-13.1,7.5,2.31>, <-11.59,6.5,4.59>, <-12.5,6.5,0> }
		triangle { <-13.1,7.5,2.31>, <-12.5,6.5,0>, <-13.3,7.5,0> }
		triangle { <8.77,-2.54,1.91>, <8.79,-2.03,0.98>, <9.44,-2.28,0> }
		triangle { <8.79,-2.03,0.98>, <8.73,-1.94,0>, <9.44,-2.28,0> }
		triangle { <6.87,-3.26,3.54>, <6.78,-2.12,1.84>, <8.77,-2.54,1.91> }
		triangle { <6.78,-2.12,1.84>, <8.79,-2.03,0.98>, <8.77,-2.54,1.91> }
		triangle { <6.78,-2.12,1.84>, <6.76,-1.76,0>, <8.79,-2.03,0.98> }
		triangle { <6.76,-1.76,0>, <8.73,-1.94,0>, <8.79,-2.03,0.98> }
		triangle { <4.01,-4.32,4.62>, <3.83,-2.71,2.43>, <6.87,-3.26,3.54> }
		triangle { <3.83,-2.71,2.43>, <6.78,-2.12,1.84>, <6.87,-3.26,3.54> }
		triangle { <3.83,-2.71,2.43>, <3.86,-2.12,0>, <6.78,-2.12,1.84> }
		triangle { <3.86,-2.12,0>, <6.76,-1.76,0>, <6.78,-2.12,1.84> }
		triangle { <0.65,-5.53,5>, <0.39,-3.74,2.64>, <4.01,-4.32,4.62> }
		triangle { <0.39,-3.74,2.64>, <3.83,-2.71,2.43>, <4.01,-4.32,4.62> }
		triangle { <0.39,-3.74,2.64>, <0.47,-3.04,0>, <3.83,-2.71,2.43> }
		triangle { <0.47,-3.04,0>, <3.86,-2.12,0>, <3.83,-2.71,2.43> }
		triangle { <-2.73,-6.69,4.62>, <-3.01,-5.06,2.43>, <0.39,-3.74,2.64> }
		triangle { <0.39,-3.74,2.64>, <0.65,-5.53,5>, <-2.73,-6.69,4.62> }
		triangle { <-3.01,-5.06,2.43>, <-2.89,-4.4,0>, <0.47,-3.04,0> }
		triangle { <0.47,-3.04,0>, <0.39,-3.74,2.64>, <-3.01,-5.06,2.43> }
		triangle { <-5.59,-7.57,3.54>, <-5.85,-6.36,1.84>, <-2.73,-6.69,4.62> }
		triangle { <-5.85,-6.36,1.84>, <-3.01,-5.06,2.43>, <-2.73,-6.69,4.62> }
		triangle { <-5.85,-6.36,1.84>, <-5.71,-5.87,0>, <-3.01,-5.06,2.43> }
		triangle { <-5.71,-5.87,0>, <-2.89,-4.4,0>, <-3.01,-5.06,2.43> }
		triangle { <-7.51,-8.06,1.91>, <-7.69,-7.5,0.98>, <-5.59,-7.57,3.54> }
		triangle { <-7.69,-7.5,0.98>, <-5.85,-6.36,1.84>, <-5.59,-7.57,3.54> }
		triangle { <-7.69,-7.5,0.98>, <-7.57,-7.26,0>, <-5.85,-6.36,1.84> }
		triangle { <-7.57,-7.26,0>, <-5.71,-5.87,0>, <-5.85,-6.36,1.84> }
		triangle { <-8.19,-8.22,0>, <-7.69,-7.5,0.98>, <-7.51,-8.06,1.91> }
		triangle { <-8.19,-8.22,0>, <-7.57,-7.26,0>, <-7.69,-7.5,0.98> }
		triangle { <-5.61,-6.91,4.63>, <-4.43,-4.08,7.23>, <-8.88,-1.52,5.48> }
		triangle { <-8.88,-1.52,5.48>, <-10.02,-4.09,3.05>, <-5.61,-6.91,4.63> }
		triangle { <-4.73,-1.52,10.25>, <-4.43,-4.08,7.23>, <-1.48,-4.33,10.87> }
		triangle { <-1.48,-4.33,10.87>, <-2.09,-3.72,10.86>, <-4.73,-1.52,10.25> }
		triangle { <-2.09,-3.72,10.86>, <-2.71,-3.12,10.83>, <-3.84,-2.22,10.51> }
		triangle { <-3.84,-2.22,10.51>, <-4.73,-1.52,10.25>, <-2.09,-3.72,10.86> }
		triangle { <-0.83,-4.99,10.89>, <-1.48,-4.33,10.87>, <-4.43,-4.08,7.23> }
		triangle { <-4.43,-4.08,7.23>, <-1.72,-5.57,8.95>, <-0.83,-4.99,10.89> }
		triangle { <-4.43,-4.08,7.23>, <-1.95,-5.74,8.44>, <-1.72,-5.57,8.95> }
		triangle { <-8.88,-1.52,5.48>, <-4.43,-4.08,7.23>, <-4.8,-1.47,10.23> }
		triangle { <-4.43,-4.08,7.23>, <-4.73,-1.52,10.25>, <-4.8,-1.47,10.23> }
		triangle { <-6.51,-0.58,9.43>, <-8.13,-0.04,8.26>, <-8.3,-0.03,8.08> }
		triangle { <-6.51,-0.58,9.43>, <-8.3,-0.03,8.08>, <-9.09,0.01,7.23> }
		triangle { <-9.09,0.01,7.23>, <-8.88,-1.52,5.48>, <-4.8,-1.47,10.23> }
		triangle { <-4.8,-1.47,10.23>, <-6.22,-0.73,9.57>, <-9.09,0.01,7.23> }
		triangle { <-6.22,-0.73,9.57>, <-6.51,-0.58,9.43>, <-9.09,0.01,7.23> }
		triangle { <-8.88,-1.52,5.48>, <-9.09,0.01,7.23>, <-9.61,-0.05,6.64> }
		triangle { <-9.61,-0.05,6.64>, <-10.51,-0.44,5.25>, <-8.88,-1.52,5.48> }
		triangle { <-10.51,-0.44,5.25>, <-10.71,-0.59,4.87>, <-8.88,-1.52,5.48> }
		triangle { <-5.61,-6.91,4.63>, <-5.89,-7.39,4.39>, <-5.66,-7.36,4.53> }
		triangle { <-5.61,-6.91,4.63>, <-5.66,-7.36,4.53>, <-5.44,-7.28,4.67> }
		triangle { <-5.61,-6.91,4.63>, <-5.44,-7.28,4.67>, <-5.17,-7.17,4.86> }
		triangle { <-4.43,-4.08,7.23>, <-5.61,-6.91,4.63>, <-5.17,-7.17,4.86> }
		triangle { <-5.17,-7.17,4.86>, <-3.98,-6.62,6.18>, <-4.43,-4.08,7.23> }
		triangle { <-3.98,-6.62,6.18>, <-3.47,-6.46,6.7>, <-4.43,-4.08,7.23> }
		triangle { <-3.47,-6.46,6.7>, <-3.14,-6.32,7.05>, <-4.43,-4.08,7.23> }
		triangle { <-4.43,-4.08,7.23>, <-3.14,-6.32,7.05>, <-2.66,-6.12,7.58> }
		triangle { <-4.43,-4.08,7.23>, <-2.66,-6.12,7.58>, <-1.95,-5.74,8.44> }
		triangle { <-10.81,-7,2>, <-9.71,-7.33,2.48>, <-9.08,-7.46,2.77> }
		triangle { <-10.81,-7,2>, <-9.08,-7.46,2.77>, <-8.36,-7.59,3.1> }
		triangle { <-8.36,-7.59,3.1>, <-7.91,-7.65,3.31>, <-10.02,-4.09,3.05> }
		triangle { <-7.91,-7.65,3.31>, <-6.36,-7.39,4.15>, <-10.02,-4.09,3.05> }
		triangle { <-5.96,-7.39,4.35>, <-5.89,-7.39,4.39>, <-5.61,-6.91,4.63> }
		triangle { <-5.96,-7.39,4.35>, <-5.61,-6.91,4.63>, <-10.02,-4.09,3.05> }
		triangle { <-10.02,-4.09,3.05>, <-10.97,-5.79,2.2>, <-10.81,-7,2> }
		triangle { <-10.81,-7,2>, <-8.36,-7.59,3.1>, <-10.02,-4.09,3.05> }
		triangle { <-6.36,-7.39,4.15>, <-5.96,-7.39,4.35>, <-10.02,-4.09,3.05> }
		triangle { <-10.02,-4.09,3.05>, <-11.22,-3.24,2.8>, <-10.97,-5.79,2.2> }
		triangle { <-10.02,-4.09,3.05>, <-11.16,-2.29,3.47>, <-11.22,-3.24,2.8> }
		triangle { <-10.02,-4.09,3.05>, <-8.88,-1.52,5.48>, <-10.71,-0.59,4.87> }
		triangle { <-10.71,-0.59,4.87>, <-11.14,-1.92,3.72>, <-10.02,-4.09,3.05> }
		triangle { <-11.14,-1.92,3.72>, <-11.16,-2.29,3.47>, <-10.02,-4.09,3.05> }
		triangle { <-11.01,-7,0>, <-8.19,-8.22,0>, <-10.85,-7,1.89> }
		triangle { <-0.43,-4.86,11>, <0.65,-5.53,5>, <1.36,-4.23,11.16> }
		triangle { <1.36,-4.23,11.16>, <0.65,-5.53,5>, <3.46,-3.45,10.84> }
		triangle { <3.46,-3.45,10.84>, <0.65,-5.53,5>, <4.01,-4.32,4.62> }
		triangle { <3.46,-3.45,10.84>, <4.01,-4.32,4.62>, <5.17,-2.8,10.1> }
		triangle { <5.17,-2.8,10.1>, <4.01,-4.32,4.62>, <6.58,-2.25,9.11> }
		triangle { <6.58,-2.25,9.11>, <4.01,-4.32,4.62>, <6.87,-3.26,3.54> }
		triangle { <6.58,-2.25,9.11>, <6.87,-3.26,3.54>, <7.82,-1.77,7.72> }
		triangle { <7.82,-1.77,7.72>, <6.87,-3.26,3.54>, <8.83,-1.39,6.07> }
		triangle { <8.83,-1.39,6.07>, <6.87,-3.26,3.54>, <8.77,-2.54,1.91> }
		triangle { <8.83,-1.39,6.07>, <8.77,-2.54,1.91>, <9.69,-1.08,4.1> }
		triangle { <9.69,-1.08,4.1>, <8.77,-2.54,1.91>, <10.08,-0.94,2.63> }
		triangle { <10.08,-0.94,2.63>, <8.77,-2.54,1.91>, <9.44,-2.28,0> }
		triangle { <10.08,-0.94,2.63>, <9.44,-2.28,0>, <10.23,-0.89,0> }
		triangle { <-12.23,0,0>, <-11.01,-7,0>, <-10.85,-7,1.89> }
		triangle { <-10.85,-7,1.89>, <-12.06,0,2.1>, <-12.23,0,0> }
		triangle { <11.2,6.06,2.92>, <10.08,-0.94,2.63>, <10.23,-0.89,0> }
		triangle { <10.23,-0.89,0>, <11.37,6.11,0>, <11.2,6.06,2.92> }
		triangle { <10.76,5.92,4.56>, <9.69,-1.08,4.1>, <10.08,-0.94,2.63> }
		triangle { <10.08,-0.94,2.63>, <11.2,6.06,2.92>, <10.76,5.92,4.56> }
		triangle { <9.81,5.61,6.75>, <8.83,-1.39,6.07>, <9.69,-1.08,4.1> }
		triangle { <9.69,-1.08,4.1>, <10.76,5.92,4.56>, <9.81,5.61,6.75> }
		triangle { <8.69,5.23,8.57>, <7.82,-1.77,7.72>, <8.83,-1.39,6.07> }
		triangle { <8.83,-1.39,6.07>, <9.81,5.61,6.75>, <8.69,5.23,8.57> }
		triangle { <7.3,4.75,10.12>, <6.58,-2.25,9.11>, <7.82,-1.77,7.72> }
		triangle { <7.82,-1.77,7.72>, <8.69,5.23,8.57>, <7.3,4.75,10.12> }
		triangle { <5.17,-2.8,10.1>, <6.58,-2.25,9.11>, <7.3,4.75,10.12> }
		triangle { <5.75,4.2,11.22>, <5.17,-2.8,10.1>, <7.3,4.75,10.12> }
		triangle { <3.46,-3.45,10.84>, <5.17,-2.8,10.1>, <5.75,4.2,11.22> }
		triangle { <3.85,3.55,12.04>, <3.46,-3.45,10.84>, <5.75,4.2,11.22> }
		triangle { <1.36,-4.23,11.16>, <3.46,-3.45,10.84>, <3.85,3.55,12.04> }
		triangle { <1.51,2.77,12.4>, <1.36,-4.23,11.16>, <3.85,3.55,12.04> }
		triangle { <-0.43,-4.86,11>, <1.36,-4.23,11.16>, <1.51,2.77,12.4> }
		triangle { <-0.47,2.14,12.22>, <-0.43,-4.86,11>, <1.51,2.77,12.4> }
		triangle { <-9.71,-7.33,2.48>, <-10.81,-7,2>, <-10.85,-7,1.89> }
		triangle { <-10.85,-7,1.89>, <-8.19,-8.22,0>, <-9.71,-7.33,2.48> }
		triangle { <-9.08,-7.46,2.77>, <-9.71,-7.33,2.48>, <-8.19,-8.22,0> }
		triangle { <-8.19,-8.22,0>, <-7.51,-8.06,1.91>, <-9.08,-7.46,2.77> }
		triangle { <-7.51,-8.06,1.91>, <-8.36,-7.59,3.1>, <-9.08,-7.46,2.77> }
		triangle { <-7.51,-8.06,1.91>, <-7.91,-7.65,3.31>, <-8.36,-7.59,3.1> }
		triangle { <-6.36,-7.39,4.15>, <-7.91,-7.65,3.31>, <-7.51,-8.06,1.91> }
		triangle { <-7.51,-8.06,1.91>, <-5.59,-7.57,3.54>, <-6.36,-7.39,4.15> }
		triangle { <-5.59,-7.57,3.54>, <-5.96,-7.39,4.35>, <-6.36,-7.39,4.15> }
		triangle { <-5.59,-7.57,3.54>, <-5.66,-7.36,4.53>, <-5.89,-7.39,4.39> }
		triangle { <-5.89,-7.39,4.39>, <-5.96,-7.39,4.35>, <-5.59,-7.57,3.54> }
		triangle { <-5.59,-7.57,3.54>, <-2.73,-6.69,4.62>, <-5.17,-7.17,4.86> }
		triangle { <-2.73,-6.69,4.62>, <-3.98,-6.62,6.18>, <-5.17,-7.17,4.86> }
		triangle { <-5.59,-7.57,3.54>, <-5.17,-7.17,4.86>, <-5.44,-7.28,4.67> }
		triangle { <-5.44,-7.28,4.67>, <-5.66,-7.36,4.53>, <-5.59,-7.57,3.54> }
		triangle { <-2.73,-6.69,4.62>, <-3.47,-6.46,6.7>, <-3.98,-6.62,6.18> }
		triangle { <-2.73,-6.69,4.62>, <-2.66,-6.12,7.58>, <-3.14,-6.32,7.05> }
		triangle { <-3.14,-6.32,7.05>, <-3.47,-6.46,6.7>, <-2.73,-6.69,4.62> }
		triangle { <-2.73,-6.69,4.62>, <0.65,-5.53,5>, <-1.95,-5.74,8.44> }
		triangle { <0.65,-5.53,5>, <-1.72,-5.57,8.95>, <-1.95,-5.74,8.44> }
		triangle { <-1.95,-5.74,8.44>, <-2.66,-6.12,7.58>, <-2.73,-6.69,4.62> }
		triangle { <-0.83,-4.99,10.89>, <-1.72,-5.57,8.95>, <0.65,-5.53,5> }
		triangle { <0.65,-5.53,5>, <-0.43,-4.86,11>, <-0.83,-4.99,10.89> }
		triangle { <-0.43,-4.86,11>, <-0.47,2.14,12.22>, <-1.48,-4.33,10.87> }
		triangle { <-0.47,2.14,12.22>, <-2.09,-3.72,10.86>, <-1.48,-4.33,10.87> }
		triangle { <-1.48,-4.33,10.87>, <-0.83,-4.99,10.89>, <-0.43,-4.86,11> }
		triangle { <-2.71,-3.12,10.83>, <-2.09,-3.72,10.86>, <-0.47,2.14,12.22> }
		triangle { <-0.47,2.14,12.22>, <-2.9,1.42,11.58>, <-2.71,-3.12,10.83> }
		triangle { <-2.9,1.42,11.58>, <-4.97,0.86,10.58>, <-4.8,-1.47,10.23> }
		triangle { <-4.8,-1.47,10.23>, <-4.73,-1.52,10.25>, <-2.9,1.42,11.58> }
		triangle { <-4.73,-1.52,10.25>, <-2.71,-3.12,10.83>, <-2.9,1.42,11.58> }
		triangle { <-4.97,0.86,10.58>, <-6.61,0.5,9.58>, <-6.51,-0.58,9.43> }
		triangle { <-6.51,-0.58,9.43>, <-6.22,-0.73,9.57>, <-4.97,0.86,10.58> }
		triangle { <-6.22,-0.73,9.57>, <-4.8,-1.47,10.23>, <-4.97,0.86,10.58> }
		triangle { <-6.61,0.5,9.58>, <-8.17,0.26,8.3>, <-8.13,-0.04,8.26> }
		triangle { <-6.61,0.5,9.58>, <-8.13,-0.04,8.26>, <-6.51,-0.58,9.43> }
		triangle { <-8.17,0.26,8.3>, <-9.64,0.13,6.66>, <-9.09,0.01,7.23> }
		triangle { <-9.64,0.13,6.66>, <-9.61,-0.05,6.64>, <-9.09,0.01,7.23> }
		triangle { <-8.17,0.26,8.3>, <-9.09,0.01,7.23>, <-8.3,-0.03,8.08> }
		triangle { <-8.3,-0.03,8.08>, <-8.13,-0.04,8.26>, <-8.17,0.26,8.3> }
		triangle { <-9.64,0.13,6.66>, <-10.59,0.07,5.29>, <-9.61,-0.05,6.64> }
		triangle { <-10.59,0.07,5.29>, <-10.51,-0.44,5.25>, <-9.61,-0.05,6.64> }
		triangle { <-10.59,0.07,5.29>, <-11.45,0.02,3.83>, <-10.71,-0.59,4.87> }
		triangle { <-11.45,0.02,3.83>, <-11.14,-1.92,3.72>, <-10.71,-0.59,4.87> }
		triangle { <-10.71,-0.59,4.87>, <-10.51,-0.44,5.25>, <-10.59,0.07,5.29> }
		triangle { <-12.06,0,2.1>, <-10.85,-7,1.89>, <-10.97,-5.79,2.2> }
		triangle { <-10.85,-7,1.89>, <-10.81,-7,2>, <-10.97,-5.79,2.2> }
		triangle { <-10.97,-5.79,2.2>, <-11.22,-3.24,2.8>, <-12.06,0,2.1> }
		triangle { <-11.45,0.02,3.83>, <-12.06,0,2.1>, <-11.22,-3.24,2.8> }
		triangle { <-11.45,0.02,3.83>, <-11.22,-3.24,2.8>, <-11.16,-2.29,3.47> }
		triangle { <-11.45,0.02,3.83>, <-11.16,-2.29,3.47>, <-11.14,-1.92,3.72> }
	}
}
#end
#end // ifndef (s_slash_61506s01_dot_dat)


//// Primitive 4-4ring3.dat
#ifndef (_4_dash_4ring3_dot_dat)
#declare _4_dash_4ring3_dot_dat = disc { <0,0,0>, <0,1,0>, 4, 3 }
#end // ifndef (_4_dash_4ring3_dot_dat)


//// Primitive 4-4ring4.dat
#ifndef (_4_dash_4ring4_dot_dat)
#declare _4_dash_4ring4_dot_dat = disc { <0,0,0>, <0,1,0>, 5, 4 }
#end // ifndef (_4_dash_4ring4_dot_dat)


//// Primitive 4-4con5.dat
#ifndef (_4_dash_4con5_dot_dat)
#declare _4_dash_4con5_dot_dat = cone { <0,0,0>, 6, <0,1,0>, 5 open }
#end // ifndef (_4_dash_4con5_dot_dat)


//// Primitive 4-4disc.dat
#ifndef (_4_dash_4disc_dot_dat)
#declare _4_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 }
#end // ifndef (_4_dash_4disc_dot_dat)


//// Primitive 4-4cyli.dat
#ifndef (_4_dash_4cyli_dot_dat)
#declare _4_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open }
#end // ifndef (_4_dash_4cyli_dot_dat)


//// Part 61506.dat
#ifndef (_61506_dot_dat)
#declare _61506_dot_dat = #if (L3Quality = 0) box { <-23.5,-13.22,-25>, <23.5,11.5,26> } #else union {
// Minifig Hat Fedora
// Name: 61506.dat
// Author: Philippe Hurbain [Philo]
// !LDRAW_ORG Part UPDATE 2012-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !CATEGORY Minifig Headwear
// !KEYWORDS Indiana Jones, Indy
// !HISTORY 2012-08-09 [PTadmin] Official Update 2012-02
	object { s_slash_61506s01_dot_dat matrix <0,0,1,0,1,0,-1,0,0,0,-5,0.5> }
	object { s_slash_61506s01_dot_dat matrix <0,0,1,0,1,0,1,0,0,0,-5,0.5> }
	object { _4_dash_4ring3_dot_dat matrix <0,0,2,0,-1,0,-2,0,0,0,0,0> }
	object { _4_dash_4ring4_dot_dat matrix <0,0,2,0,-1,0,-2,0,0,0,0,0> }
// BFC INVERTNEXT
	object { _4_dash_4con5_dot_dat matrix <0,0,2,0,-1.5,0,-2,0,0,0,1.5,0> }
	object { _4_dash_4disc_dot_dat matrix <0,0,6,0,-1,0,-6,0,0,0,-4,0> }
// BFC INVERTNEXT
	object { _4_dash_4cyli_dot_dat matrix <0,0,6,0,4,0,-6,0,0,0,-4,0> }
// Middle condlines
// Not knot
	mesh {
		triangle { <-12.67,-1.45,4.55>, <-11.81,-0.8,6.55>, <-12.3,4.7,7.7> }
		triangle { <-13.2,4.05,5.5>, <-12.67,-1.45,4.55>, <-12.3,4.7,7.7> }
		triangle { <-13.06,-2.23,2.09>, <-12.67,-1.45,4.55>, <-13.2,4.05,5.5> }
		triangle { <-13.6,3.27,2.8>, <-13.06,-2.23,2.09>, <-13.2,4.05,5.5> }
		triangle { <-13.4,2.64,0.5>, <-12.86,-2.85,0>, <-13.06,-2.23,2.09> }
		triangle { <-13.06,-2.23,2.09>, <-13.6,3.27,2.8>, <-13.4,2.64,0.5> }
		triangle { <-12.19,-3.58,-2.55>, <-12.86,-2.85,0>, <-13.4,2.64,0.5> }
		triangle { <-12.7,1.91,-2.3>, <-12.19,-3.58,-2.55>, <-13.4,2.64,0.5> }
		triangle { <-11.14,-4.14,-4.73>, <-12.19,-3.58,-2.55>, <-12.7,1.91,-2.3> }
		triangle { <-11.6,1.36,-4.7>, <-11.14,-4.14,-4.73>, <-12.7,1.91,-2.3> }
		triangle { <-10.08,-4.5,-6.46>, <-11.14,-4.14,-4.73>, <-11.6,1.36,-4.7> }
		triangle { <-10.5,1,-6.6>, <-10.08,-4.5,-6.46>, <-11.6,1.36,-4.7> }
// Knot
		triangle { <12.8,4.7,7.7>, <12.31,-0.8,6.55>, <13.17,-1.45,4.55> }
		triangle { <12.8,4.7,7.7>, <13.17,-1.45,4.55>, <13.7,4.05,5.5> }
		triangle { <13.7,4.05,5.5>, <13.17,-1.45,4.55>, <13.56,-2.23,2.09> }
		triangle { <13.7,4.05,5.5>, <13.56,-2.23,2.09>, <14.1,3.27,2.8> }
		triangle { <14.6,3.27,2.8>, <14.06,-2.23,2.09>, <13.86,-2.85,0> }
		triangle { <13.86,-2.85,0>, <14.4,2.64,0.5>, <14.6,3.27,2.8> }
		triangle { <14.4,2.64,0.5>, <13.86,-2.85,0>, <13.19,-3.58,-2.55> }
		triangle { <14.4,2.64,0.5>, <13.19,-3.58,-2.55>, <13.7,1.91,-2.3> }
		triangle { <13.2,1.91,-2.3>, <12.69,-3.58,-2.55>, <11.64,-4.14,-4.73> }
		triangle { <13.2,1.91,-2.3>, <11.64,-4.14,-4.73>, <12.1,1.36,-4.7> }
		triangle { <12.1,1.36,-4.7>, <11.64,-4.14,-4.73>, <10.58,-4.5,-6.46> }
		triangle { <12.1,1.36,-4.7>, <10.58,-4.5,-6.46>, <11,1,-6.6> }
		triangle { <14.1,3.27,2.8>, <13.56,-2.23,2.09>, <14.06,-2.23,2.09> }
		triangle { <14.06,-2.23,2.09>, <14.6,3.27,2.8>, <14.1,3.27,2.8> }
		triangle { <13.7,1.91,-2.3>, <13.19,-3.58,-2.55>, <12.69,-3.58,-2.55> }
		triangle { <12.69,-3.58,-2.55>, <13.2,1.91,-2.3>, <13.7,1.91,-2.3> }
		triangle { <12.8,4.7,7.7>, <12.3,4.7,7.7>, <11.81,-0.8,6.55> }
		triangle { <11.81,-0.8,6.55>, <12.31,-0.8,6.55>, <12.8,4.7,7.7> }
		triangle { <10.58,-4.5,-6.46>, <10.08,-4.5,-6.46>, <10.5,1,-6.6> }
		triangle { <10.5,1,-6.6>, <11,1,-6.6>, <10.58,-4.5,-6.46> }
		triangle { <12.31,-0.8,6.55>, <11.81,-0.8,6.55>, <12.67,-1.45,4.55> }
		triangle { <12.67,-1.45,4.55>, <13.17,-1.45,4.55>, <12.31,-0.8,6.55> }
		triangle { <13.17,-1.45,4.55>, <12.67,-1.45,4.55>, <13.06,-2.23,2.09> }
		triangle { <13.06,-2.23,2.09>, <13.56,-2.23,2.09>, <13.17,-1.45,4.55> }
		triangle { <13.56,-2.23,2.09>, <13.06,-2.23,2.09>, <12.86,-2.85,0> }
		triangle { <12.86,-2.85,0>, <13.36,-2.85,0>, <13.56,-2.23,2.09> }
		triangle { <13.36,-2.85,0>, <12.86,-2.85,0>, <12.19,-3.58,-2.55> }
		triangle { <12.19,-3.58,-2.55>, <12.69,-3.58,-2.55>, <13.36,-2.85,0> }
		triangle { <12.69,-3.58,-2.55>, <12.19,-3.58,-2.55>, <11.14,-4.14,-4.73> }
		triangle { <11.14,-4.14,-4.73>, <11.64,-4.14,-4.73>, <12.69,-3.58,-2.55> }
		triangle { <11.64,-4.14,-4.73>, <11.14,-4.14,-4.73>, <10.08,-4.5,-6.46> }
		triangle { <10.08,-4.5,-6.46>, <10.58,-4.5,-6.46>, <11.64,-4.14,-4.73> }
		triangle { <13.36,-2.85,0>, <13.86,-2.85,0>, <14.06,-2.23,2.09> }
		triangle { <14.06,-2.23,2.09>, <13.56,-2.23,2.09>, <13.36,-2.85,0> }
		triangle { <12.69,-3.58,-2.55>, <13.19,-3.58,-2.55>, <13.86,-2.85,0> }
		triangle { <13.86,-2.85,0>, <13.36,-2.85,0>, <12.69,-3.58,-2.55> }
	}
}
#end
#end // ifndef (_61506_dot_dat)


//// Model MLCadHat.ldr
#ifndef (MLCadHat_dot_ldr)
#declare MLCadHat_dot_ldr = object {
// Untitled
// Name: MLCadHat.ldr
// Author: MLCad
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	// 1 484  -60 0 10  1 0 0  0 1 0  0 0 1 61506.dat
	object {
		_61506_dot_dat
		matrix <1-L3SW/47,0,0,0,1-L3SW/24.72,0,0,0,1-L3SW/51,0,L3SW/-28.7442,L3SW/102>
		matrix <1,0,0,0,1,0,0,0,1,-60,0,10>
		material { L3Color484 }
	}
}
#end // ifndef (MLCadHat_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-83.5,-13.22,-15>;
#declare L3ModelBBoxMax = <-36.5,11.5,36>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <-60,-0.86,10.5>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <47,24.72,51>
#declare L3FloorY = L3ModelBBoxMax.y;

//// Camera
// L3P's automatic camera positioning was based on the following:
// L3Latitude=30
// L3Longitude=45
// L3Radius=58.1523
// L3PercentageBack=0
// L3ViewingAngle=67.3801
// L3RollAngle=0
// L3AspectRatio=4/3
// If changed below, objects may no longer fit into the view.
camera {
	#declare L3PercentageBack = 0; // Percentage of radius
	#declare L3Orthographic = 0; // Set to 1 for orthographic view
	#declare L3ViewingAngle = 67.3801; // degrees
	#declare L3RollAngle = 0; // degrees
	#declare L3AspectRatio = 4/3;
	#declare L3Sky = -y;
	#declare L3StereoAngle = 5; // degrees
	//5 degrees corresponds to a distance between eyes (stereo cameras)
	//of 1/12 of distance to model.
	#declare L3StereoView = 0; // Normal view
	//Uncomment either two lines below to make stereo images:
	//#declare L3StereoView = -L3StereoAngle/2; // Left view
	//#declare L3StereoView =  L3StereoAngle/2; // Right view

	#if (version >= 3.5)
		#if (abs(L3AspectRatio-image_width/image_height) > 0.01)
			#error "L3AspectRatio does not match image size. Select a correct image size or use option -car<ar>."
		#end
	#end

	sky      L3Sky
	right    -L3AspectRatio*x
	#if (L3Orthographic)

		#error "* * doesn't work yet..."

		orthographic
		#declare L3LookAt = <-60,-0.86,10.5>; // BBox center (not -cla)
		#declare L3OrthoScale = (1+L3PercentageBack/100.0)*56.0564;
		#declare L3Location = L3LookAt - 2000*<-0.612372,0.5,0.612372>;
		location L3Location
		scale    L3OrthoScale
	#else
		#declare L3LookAt = <-56.3654,9.45707,5.71072>; // Calculated (not -cla)
		#declare L3Location = <-20.7545,-19.6191,-29.9002>;
		#declare L3Location = L3Location + L3PercentageBack/100.0*(L3Location-L3LookAt);
		//#if (L3StereoView)
		//	#declare L3Location = L3LookAt + vaxis_rotate(L3Location-L3LookAt, <-0.353553,-0.866025,0.353553>, L3StereoView);
		//#end
		angle    L3ViewingAngle
		location L3Location
	#end
	look_at  L3LookAt
	rotate   <0,1e-5,0> // Prevent gap between adjacent quads

#declare Closer = L3LookAt+0.1*(L3Location-L3LookAt);

	translate -L3Location
	#declare vx=vaxis_rotate(x,L3LookAt-L3Location,L3RollAngle);
	#declare vy=vaxis_rotate(y,L3LookAt-L3Location,L3RollAngle);
	#declare vz=vaxis_rotate(z,L3LookAt-L3Location,L3RollAngle);
	matrix <vx.x,vx.y,vx.z, vy.x,vy.y,vy.z, vz.x,vz.y,vz.z, 0,0,0>
	translate L3Location

#if (L3StereoView)
	translate -L3Location
	#declare Ver=<-0.353553,-0.866025,0.353553>;
	#declare vx=vaxis_rotate(x,Ver,L3StereoView);
	#declare vy=vaxis_rotate(y,Ver,L3StereoView);
	#declare vz=vaxis_rotate(z,Ver,L3StereoView);
	matrix <vx.x,vx.y,vx.z, vy.x,vy.y,vy.z, vz.x,vz.y,vz.z, 0,0,0>
	#declare L3Location = L3LookAt + vaxis_rotate(L3Location-L3LookAt, Ver, L3StereoView);
	translate L3Location
#end


//////////////////////////////////////////////////
// What about L3RollAngle... before/after stereo ?
//////////////////////////////////////////////////

	//Rotate model around its center:
	//translate -L3ModelBBoxCenter
	//rotate    <0,360*clock,0>
	//translate L3ModelBBoxCenter
}

//// Lights
light_source {
	<-60,-41.9799,-30.6199>  // Latitude,Longitude,Radius: 45,0,58.1523
	color rgb <1,1,1>
}
light_source {
	<-16.3857,-29.9362,35.6807>  // Latitude,Longitude,Radius: 30,120,58.1523
	color rgb <1,1,1>
}
light_source {
	<-85.1807,-51.2214,25.0381>  // Latitude,Longitude,Radius: 60,-120,58.1523
	color rgb <1,1,1>
}

//// ModelObject MLCadHat.ldr
object { MLCadHat_dot_ldr }



//// Statistics
//               PARTS             P         Total
// DAT files:        2             6             9
// POV Equivs:       -             5 (83%)
// LGEO:             0 (0%)        0 (0%)
// Model has 1 parts (0 studs)

//// End
