// Generated by L3P v1.3 20010120  (C) 1998-2001 Lars C. Hassing  lch@ccieurope.com
// WWW: http://home16.inet.tele.dk/hassing/l3p.html
// WWW: http://www.ldraw.org/download/software/l3p
// Date: Sat Apr 15 23:56:36 2006
// Input file: LPub\LDraw\minifig_tool01.ldr
// ModelDir: LPub\LDraw\
// LDRAWDIR: C:\Programs\LDraw
// Commandline: l3p.exe -stdout -ca30.000000 -q2 -b0x02ffffff -o LPub\LDraw\minifig_tool01.ldr LPub\POV\minifig_tool01.pov


#declare QUAL = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo

#declare SW = 0.5;  // Width of seam between two bricks

#declare STUDS = 1;  // 1=on 0=off

#declare BUMPS = 0;  // 1=on 0=off


#declare BUMPNORMAL = normal { bumps 0.01 scale 20 }
#declare AMB = 0.4;
#declare DIF = 0.4;


#declare O7071 = sqrt(0.5);

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


#ifndef (Color7)
#declare Color7 = #if (version >= 3.1) material { #end texture {
	pigment { rgb <0.682353,0.682353,0.682353> }
	finish { ambient AMB diffuse DIF }
	#if (QUAL > 1)
		finish { phong 0.5 phong_size 40 reflection 0.08 }
		#if (BUMPS) normal { BUMPNORMAL } #end
	#end
} #if (version >= 3.1) } #end
#end
#ifndef (GreyColor7)
#declare GreyColor7 = #if (version >= 3.1) material { #end texture {
	pigment { rgb <0.682353,0.682353,0.682353>  }
	finish { ambient AMB diffuse DIF }
	#if (QUAL > 1)
		finish { phong 0.5 phong_size 40 reflection 0.08 }
		#if (BUMPS) normal { BUMPNORMAL } #end
	#end
} #if (version >= 3.1) } #end
#end

#ifndef (Color15)
#declare Color15 = #if (version >= 3.1) material { #end texture {
	pigment { rgb <1,1,1> }
	finish { ambient AMB diffuse DIF }
	#if (QUAL > 1)
		finish { phong 0.5 phong_size 40 reflection 0.08 }
		#if (BUMPS) normal { BUMPNORMAL } #end
	#end
} #if (version >= 3.1) } #end
#end
#ifndef (GreyColor15)
#declare GreyColor15 = #if (version >= 3.1) material { #end texture {
	pigment { rgb <1.000000,1.000000,1.000000>  }
	finish { ambient AMB diffuse DIF }
	#if (QUAL > 1)
		finish { phong 0.5 phong_size 40 reflection 0.08 }
		#if (BUMPS) normal { BUMPNORMAL } #end
	#end
} #if (version >= 3.1) } #end
#end

#ifndef (Color36)
#declare Color36 = #if (version >= 3.1) material { #end texture {
	pigment { rgb <0.968627,0.160784,0.054902> #if (QUAL > 1) filter 0.85 #end }
	finish { ambient AMB diffuse DIF }
	#if (QUAL > 1)
		finish { phong 0.5 phong_size 40 reflection 0.2 }
		#if (version >= 3.1) #else finish { refraction 1 ior 1.25 } #end
		#if (BUMPS) normal { BUMPNORMAL } #end
	#end
} #if (version >= 3.1) #if (QUAL > 1) interior { ior 1.25 } #end } #end
#end
#ifndef (GreyColor36)
#declare GreyColor36 = #if (version >= 3.1) material { #end texture {
	pigment { rgb <0.968627,0.160784,0.054902> #if (QUAL > 1) filter 0.85 #end }
	finish { ambient AMB diffuse DIF }
	#if (QUAL > 1)
		finish { phong 0.5 phong_size 40 reflection 0.2 }
		#if (version >= 3.1) #else finish { refraction 1 ior 1.25 } #end
		#if (BUMPS) normal { BUMPNORMAL } #end
	#end
} #if (version >= 3.1) #if (QUAL > 1) interior { ior 1.25 } #end } #end
#end

#declare _4_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open }

#declare _4_dash_4disc_dot_dat = #if (version >= 3.1)
	disc { <0,0,0>, <0,1,0>, 1 }
#else
	cylinder { <0,-0.001,0>, <0,0.001,0>, 1 }
#end

#declare ring2_dot_dat = #if (version >= 3.1)
	disc { <0,0,0>, <0,1,0>, 3, 2 }
#else
	difference {
		cylinder { <0,-0.001,0>, <0,0.001,0>, 3 }
		cylinder { <0,-0.002,0>, <0,0.002,0>, 2 }
	}
#end

#declare ring1_dot_dat = #if (version >= 3.1)
	disc { <0,0,0>, <0,1,0>, 2, 1 }
#else
	difference {
		cylinder { <0,-0.001,0>, <0,0.001,0>, 2 }
		cylinder { <0,-0.002,0>, <0,0.002,0>, 1 }
	}
#end

#declare ring4_dot_dat = #if (version >= 3.1)
	disc { <0,0,0>, <0,1,0>, 5, 4 }
#else
	difference {
		cylinder { <0,-0.001,0>, <0,0.001,0>, 5 }
		cylinder { <0,-0.002,0>, <0,0.002,0>, 4 }
	}
#end

#declare _577_dot_dat = #if (QUAL = 0) box { <-8,-4,-8>, <8,40,8> } #else union {
// Minifig Tool Light Sabre Hilt
// Name: 577.dat
// Author: Steve Bliss
// Official LCad update 99-05
// CATEGORY Minifig Accessory
// KEYWORDS Star Wars, rod, bar, sword, base
// not CW-Compliant
// --------------------------------------
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,-4,0,0,0,4,0,40,0> }
	object { _4_dash_4disc_dot_dat matrix <4,0,0,0,1,0,0,0,4,0,36,0> }
	object { ring2_dot_dat matrix <2,0,0,0,1,0,0,0,2,0,40,0> }
	object { _4_dash_4cyli_dot_dat matrix <6,0,0,0,8,0,0,0,6,0,32,0> }
	object { _4_dash_4disc_dot_dat matrix <6,0,0,0,1,0,0,0,6,0,32,0> }
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,28,0,0,0,4,0,4,0> }
	object { ring1_dot_dat matrix <4,0,0,0,1,0,0,0,4,0,4,0> }
	object { _4_dash_4cyli_dot_dat matrix <8,0,0,0,4,0,0,0,8,0,0,0> }
	object { _4_dash_4disc_dot_dat matrix <8,0,0,0,1,0,0,0,8,0,0,0> }
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,-4,0,0,0,4,0,0,0> }
	object { ring2_dot_dat matrix <2,0,0,0,1,0,0,0,2,0,-4,0> }
	object { _4_dash_4cyli_dot_dat matrix <6,0,0,0,4,0,0,0,6,0,-4,0> }
	object { ring4_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,12,0> }
	object { ring4_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,10.5,0> }
	object { ring4_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,8,0> }
	object { ring4_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,6.5,0> }
	object { _4_dash_4cyli_dot_dat matrix <5,0,0,0,1.5,0,0,0,5,0,6.5,0> }
	object { _4_dash_4cyli_dot_dat matrix <5,0,0,0,1.5,0,0,0,5,0,10.5,0> }
	mesh {
		triangle { <3.492,30,1.913>, <6.619,32,1.913>, <3.492,32,1.913> }
		triangle { <6.619,32,1.913>, <5.619,32,1.913>, <5.619,35,1.913> }
		triangle { <5.619,35,1.913>, <6.619,35,1.913>, <6.619,32,1.913> }
		triangle { <5.619,35,1.913>, <6.619,35,1.913>, <7,35,0> }
		triangle { <7,35,0>, <6,35,0>, <5.619,35,1.913> }
		triangle { <5.619,35,-1.913>, <6.619,35,-1.913>, <7,35,0> }
		triangle { <7,35,0>, <6,35,0>, <5.619,35,-1.913> }
		triangle { <6.619,32,-1.913>, <5.619,32,-1.913>, <5.619,35,-1.913> }
		triangle { <5.619,35,-1.913>, <6.619,35,-1.913>, <6.619,32,-1.913> }
		triangle { <3.492,30,-1.913>, <6.619,32,-1.913>, <3.492,32,-1.913> }
		triangle { <6.619,35,1.913>, <7,35,0>, <7,32,0> }
		triangle { <7,32,0>, <6.619,32,1.913>, <6.619,35,1.913> }
		triangle { <6.619,35,-1.913>, <7,35,0>, <7,32,0> }
		triangle { <7,32,0>, <6.619,32,-1.913>, <6.619,35,-1.913> }
		triangle { <3.492,30,1.913>, <4,30,0>, <7,32,0> }
		triangle { <7,32,0>, <6.619,32,1.913>, <3.492,30,1.913> }
		triangle { <3.492,30,-1.913>, <4,30,0>, <7,32,0> }
		triangle { <7,32,0>, <6.619,32,-1.913>, <3.492,30,-1.913> }
		triangle { <1.913,30,-3.492>, <1.913,32,-6.619>, <1.913,32,-3.492> }
		triangle { <1.913,32,-6.619>, <1.913,32,-5.619>, <1.913,35,-5.619> }
		triangle { <1.913,35,-5.619>, <1.913,35,-6.619>, <1.913,32,-6.619> }
		triangle { <1.913,35,-5.619>, <1.913,35,-6.619>, <0,35,-7> }
		triangle { <0,35,-7>, <0,35,-6>, <1.913,35,-5.619> }
		triangle { <-1.913,35,-5.619>, <-1.913,35,-6.619>, <0,35,-7> }
		triangle { <0,35,-7>, <0,35,-6>, <-1.913,35,-5.619> }
		triangle { <-1.913,32,-6.619>, <-1.913,32,-5.619>, <-1.913,35,-5.619> }
		triangle { <-1.913,35,-5.619>, <-1.913,35,-6.619>, <-1.913,32,-6.619> }
		triangle { <-1.913,30,-3.492>, <-1.913,32,-6.619>, <-1.913,32,-3.492> }
		triangle { <1.913,35,-6.619>, <0,35,-7>, <0,32,-7> }
		triangle { <0,32,-7>, <1.913,32,-6.619>, <1.913,35,-6.619> }
		triangle { <-1.913,35,-6.619>, <0,35,-7>, <0,32,-7> }
		triangle { <0,32,-7>, <-1.913,32,-6.619>, <-1.913,35,-6.619> }
		triangle { <1.913,30,-3.492>, <0,30,-4>, <0,32,-7> }
		triangle { <0,32,-7>, <1.913,32,-6.619>, <1.913,30,-3.492> }
		triangle { <-1.913,30,-3.492>, <0,30,-4>, <0,32,-7> }
		triangle { <0,32,-7>, <-1.913,32,-6.619>, <-1.913,30,-3.492> }
		triangle { <-3.492,30,-1.913>, <-6.619,32,-1.913>, <-3.492,32,-1.913> }
		triangle { <-6.619,32,-1.913>, <-5.619,32,-1.913>, <-5.619,35,-1.913> }
		triangle { <-5.619,35,-1.913>, <-6.619,35,-1.913>, <-6.619,32,-1.913> }
		triangle { <-5.619,35,-1.913>, <-6.619,35,-1.913>, <-7,35,0> }
		triangle { <-7,35,0>, <-6,35,0>, <-5.619,35,-1.913> }
		triangle { <-5.619,35,1.913>, <-6.619,35,1.913>, <-7,35,0> }
		triangle { <-7,35,0>, <-6,35,0>, <-5.619,35,1.913> }
		triangle { <-6.619,32,1.913>, <-5.619,32,1.913>, <-5.619,35,1.913> }
		triangle { <-5.619,35,1.913>, <-6.619,35,1.913>, <-6.619,32,1.913> }
		triangle { <-3.492,30,1.913>, <-6.619,32,1.913>, <-3.492,32,1.913> }
		triangle { <-6.619,35,-1.913>, <-7,35,0>, <-7,32,0> }
		triangle { <-7,32,0>, <-6.619,32,-1.913>, <-6.619,35,-1.913> }
		triangle { <-6.619,35,1.913>, <-7,35,0>, <-7,32,0> }
		triangle { <-7,32,0>, <-6.619,32,1.913>, <-6.619,35,1.913> }
		triangle { <-3.492,30,-1.913>, <-4,30,0>, <-7,32,0> }
		triangle { <-7,32,0>, <-6.619,32,-1.913>, <-3.492,30,-1.913> }
		triangle { <-3.492,30,1.913>, <-4,30,0>, <-7,32,0> }
		triangle { <-7,32,0>, <-6.619,32,1.913>, <-3.492,30,1.913> }
		triangle { <-1.913,30,3.492>, <-1.913,32,6.619>, <-1.913,32,3.492> }
		triangle { <-1.913,32,6.619>, <-1.913,32,5.619>, <-1.913,35,5.619> }
		triangle { <-1.913,35,5.619>, <-1.913,35,6.619>, <-1.913,32,6.619> }
		triangle { <-1.913,35,5.619>, <-1.913,35,6.619>, <0,35,7> }
		triangle { <0,35,7>, <0,35,6>, <-1.913,35,5.619> }
		triangle { <1.913,35,5.619>, <1.913,35,6.619>, <0,35,7> }
		triangle { <0,35,7>, <0,35,6>, <1.913,35,5.619> }
		triangle { <1.913,32,6.619>, <1.913,32,5.619>, <1.913,35,5.619> }
		triangle { <1.913,35,5.619>, <1.913,35,6.619>, <1.913,32,6.619> }
		triangle { <1.913,30,3.492>, <1.913,32,6.619>, <1.913,32,3.492> }
		triangle { <-1.913,35,6.619>, <0,35,7>, <0,32,7> }
		triangle { <0,32,7>, <-1.913,32,6.619>, <-1.913,35,6.619> }
		triangle { <1.913,35,6.619>, <0,35,7>, <0,32,7> }
		triangle { <0,32,7>, <1.913,32,6.619>, <1.913,35,6.619> }
		triangle { <-1.913,30,3.492>, <0,30,4>, <0,32,7> }
		triangle { <0,32,7>, <-1.913,32,6.619>, <-1.913,30,3.492> }
		triangle { <1.913,30,3.492>, <0,30,4>, <0,32,7> }
		triangle { <0,32,7>, <1.913,32,6.619>, <1.913,30,3.492> }
// 
	}
}
#end

#declare _578_dot_dat = #if (QUAL = 0) box { <-4,0,-4>, <4,80,4> } #else union {
// Bar  4L Light Sabre Blade
// Name: 578.dat
// Author: Steve Bliss
// LDRAW_ORG Part UPDATE 2002-05
// KEYWORDS minifig, tool, saber, bar, star wars, accessory
// BFC CERTIFY CW
// 2002-07-26 SEB Corrected spacing in title, applied BFC
	object { _4_dash_4disc_dot_dat matrix <4,0,0,0,1,0,0,0,4,0,0,0> }
	object { _4_dash_4cyli_dot_dat matrix <4,0,0,0,80,0,0,0,4,0,0,0> }
	object { _4_dash_4disc_dot_dat matrix <-4,0,0,0,-1,0,0,0,4,0,80,0> }
// 
}
#end

#declare this_object = union {
// Untitled
// Name: minifig_tool01.ldr
// Author: MLCad
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	object {
		_577_dot_dat
		matrix <1-SW/16,0,0,0,1-SW/44,0,0,0,1-SW/16,0,SW/2.44444,0>
		matrix <1,0,0,0,1,0,0,0,1,0,0,0>
		#if (version >= 3.1) material #else texture #end { Color15 }
		translate <0,-15,0>
	}
	object {
		_578_dot_dat
		matrix <1-SW/8,0,0,0,1-SW/80,0,0,0,1-SW/8,0,SW/2,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-80,0>
		#if (version >= 3.1) material #else texture #end { Color36 }
		translate <0,-15,0>
	}
// 
}


