// Generated by L3P v1.4 BETA 20080930 (MacOSX i386)  (C) 1998-2008 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Mon Dec 17 14:22:40 2012
// Input file:   /Users/Irmo/Dropbox/SE3 Shared/7 WiSe 12/IVC/Gruppe Bornholdt-Frede-Timmann/Objekte/sidebag.ldr
// Title:        untitled model
// Author:       Irmo
// ModelDir:     /Users/Irmo/Dropbox/SE3 Shared/7 WiSe 12/IVC/Gruppe Bornholdt-Frede-Timmann/Objekte
// WorkDir:      /
// LDRAWDIR:     /Applications/IVC/ldraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   /Users/Irmo/Dropbox/SE3 Shared/7 WiSe 12/IVC/Gruppe Bornholdt-Frede-Timmann/Objekte/ (0x10)
// SearchDir2:   /Applications/IVC/ldraw/P/ (0x9)
// SearchDir3:   /Applications/IVC/ldraw/PARTS/ (0x4)
// SearchDir4:   /Applications/IVC/ldraw/MODELS/ (0x0)
// ldconfig.ldr: /Applications/IVC/ldraw/ldconfig.ldr
// Commandline:  "/Applications/IVC/L3P_Launcher_.9/L3P Launcher.app/Contents/Resources/l3p" "/Users/Irmo/Dropbox/SE3 Shared/7 WiSe 12/IVC/Gruppe Bornholdt-Frede-Timmann/Objekte/sidebag.ldr" "/Users/Irmo/Dropbox/SE3 Shared/7 WiSe 12/IVC/Gruppe Bornholdt-Frede-Timmann/Objekte/sidebag.pov" -o -cg30,45,0

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}




//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.08
	#end
}
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish {
	ambient 0.25
	diffuse 0.6
	#if (L3Quality >= 2)
		brilliance 5
		metallic
		specular 0.80
		roughness 1/100
		reflection 0.65
	#end
}
#end

#ifndef (L3FinishPearlescent)
//Not supported yet, using Opaque
#declare L3FinishPearlescent = finish { L3FinishOpaque }
#end

#ifndef (L3FinishRubber)
#declare L3FinishRubber = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.1
		phong_size 10
		reflection 0
	#end
}
#end

#ifndef (L3FinishMatte_metallic)
//Not supported yet, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported yet, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish {
	ambient L3Ambient
	diffuse L3Diffuse
	#if (L3Quality >= 2)
		phong 0.5
		phong_size 40
		reflection 0.2
	#end
}
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { ior L3Ior }
	#end
}
#end
#end



//// Color 7 Light_Gray (from ldconfig.ldr)
#ifndef (L3Texture7)
#declare L3Texture7 = L3TextureOpaqueRGB(155,161,157)
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Color 70 Reddish_Brown (from ldconfig.ldr)
#ifndef (L3Texture70)
#declare L3Texture70 = L3TextureOpaqueRGB(88,42,18)
#end
#ifndef (L3Texture70_slope)
#declare L3Texture70_slope = L3TextureSlope(L3Texture70)
#end
#ifndef (L3Color70)
#declare L3Color70 = L3Material(L3Texture70)
#end
#ifndef (L3Color70_slope)
#declare L3Color70_slope = L3Material(L3Texture70_slope)
#end


//// Primitive 48/1-8cyli.dat
#ifndef (_48_slash_1_dash_8cyli_dot_dat)
#declare _48_slash_1_dash_8cyli_dot_dat = cylinder {
	<0,0,0>, <0,1,0>, 1 open
	clipped_by { plane { <-2-sqrt(2),0,-sqrt(2)>,-sqrt(sqrt(2)+2)/2 } }
}
#end // ifndef (_48_slash_1_dash_8cyli_dot_dat)


//// Primitive 48/1-8rin14.dat
#ifndef (_48_slash_1_dash_8rin14_dot_dat)
#declare _48_slash_1_dash_8rin14_dot_dat = disc {
	<0,0,0>, <0,1,0>, 15, 14
	clipped_by { plane { -z, 0 } plane { <-1,0,1>, 0 } }
}
#end // ifndef (_48_slash_1_dash_8rin14_dot_dat)


//// Primitive rect3.dat
#ifndef (rect3_dot_dat)
#declare rect3_dot_dat = object {
// Rectangle with 3 Edges
// Name: rect3.dat
// Author: Mark Kennedy [mkennedy]
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2003-08-01 [PTadmin] Official Update 2003-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-01-17 [mikeheide] Change winding to CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	mesh {
		triangle { <-1,0,1>, <-1,0,-1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,0,1>, <-1,0,1> }
	}
}
#end // ifndef (rect3_dot_dat)


//// Primitive rect2a.dat
#ifndef (rect2a_dot_dat)
#declare rect2a_dot_dat = object {
// Rectangle with 2 Adjacent Edges
// Name: rect2a.dat
// Author: Chris Dee [cwdee]
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2003-12-19 [PTadmin] Official Update 2003-03
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-01-17 [mikeheide] changed winding to CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	mesh {
		triangle { <-1,0,1>, <-1,0,-1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,0,1>, <-1,0,1> }
	}
}
#end // ifndef (rect2a_dot_dat)


//// Primitive rect2p.dat
#ifndef (rect2p_dot_dat)
#declare rect2p_dot_dat = object {
// Rectangle with 2 Parallel Edges
// Name: rect2p.dat
// Author: Donald Sutter [technog]
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2003-08-01 [PTadmin] Official Update 2003-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-01-17 [mikeheide] changed winding to CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	mesh {
		triangle { <-1,0,1>, <-1,0,-1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,0,1>, <-1,0,1> }
	}
}
#end // ifndef (rect2p_dot_dat)


//// Primitive 4-4con0.dat
#ifndef (_4_dash_4con0_dot_dat)
#declare _4_dash_4con0_dot_dat = cone { <0,0,0>, 1, <0,1,0>, 0 open }
#end // ifndef (_4_dash_4con0_dot_dat)


//// Primitive rect1.dat
#ifndef (rect1_dot_dat)
#declare rect1_dot_dat = object {
// Rectangle with 1 Edge
// Name: rect1.dat
// Author: Chris Dee [cwdee]
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2003-12-19 [PTadmin] Official Update 2003-03
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-01-17 [mikeheide] changed winding to CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	mesh {
		triangle { <-1,0,1>, <-1,0,-1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,0,1>, <-1,0,1> }
	}
}
#end // ifndef (rect1_dot_dat)


//// Primitive box4-4a.dat
#ifndef (box4_dash_4a_dot_dat)
#declare box4_dash_4a_dot_dat = object {
// Box with 4 Faces without 4 Adjacent Edges
// Name: box4-4a.dat
// Author: Manfred Moolhuysen
// !LDRAW_ORG Primitive UPDATE 2012-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 1998-07-15 [PTadmin] Official Update 1998-07
// !HISTORY 2002-12-13 [hafhead] Made BFC compliant
// !HISTORY 2003-03-12 [PTadmin] Official Update 2003-01
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2012-02-16 [Philo] Changed to CCW
// !HISTORY 2012-03-30 [PTadmin] Official Update 2012-01
	mesh {
		triangle { <1,1,-1>, <-1,1,-1>, <-1,1,1> }
		triangle { <-1,1,1>, <1,1,1>, <1,1,-1> }
		triangle { <-1,1,1>, <-1,0,1>, <1,0,1> }
		triangle { <1,0,1>, <1,1,1>, <-1,1,1> }
		triangle { <-1,1,-1>, <-1,0,-1>, <-1,0,1> }
		triangle { <-1,0,1>, <-1,1,1>, <-1,1,-1> }
		triangle { <1,1,1>, <1,0,1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,1,-1>, <1,1,1> }
	}
}
#end // ifndef (box4_dash_4a_dot_dat)


//// Primitive rect.dat
#ifndef (rect_dot_dat)
#declare rect_dot_dat = object {
// Rectangle
// Name: rect.dat
// Author: James Jessiman
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2002-04-05 [hafhead] Added BFC statement
// !HISTORY 2002-04-25 [PTadmin] Official Update 2002-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-01-17 [mikeheide] changed winding to CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	mesh {
		triangle { <-1,0,1>, <-1,0,-1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,0,1>, <-1,0,1> }
	}
}
#end // ifndef (rect_dot_dat)


//// Primitive 2-4disc.dat
#ifndef (_2_dash_4disc_dot_dat)
#declare _2_dash_4disc_dot_dat = disc { <0,0,0>, <0,1,0>, 1 clipped_by { box { <-2,-1,0>, <2,1,2> } } }
#end // ifndef (_2_dash_4disc_dot_dat)


//// Primitive 2-4cyli.dat
#ifndef (_2_dash_4cyli_dot_dat)
#declare _2_dash_4cyli_dot_dat = cylinder { <0,0,0>, <0,1,0>, 1 open clipped_by { plane { -z, 0 } } }
#end // ifndef (_2_dash_4cyli_dot_dat)


//// Primitive 2-4cylc.dat
#ifndef (_2_dash_4cylc_dot_dat)
#declare _2_dash_4cylc_dot_dat = union {
// Cylinder Closed 0.5
// Name: 2-4cylc.dat
// Author: Alex Taylor [anathema]
// !LDRAW_ORG Primitive UPDATE 2009-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2009-09-03 [PTadmin] Official Update 2009-02
	object { _2_dash_4disc_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	object { _2_dash_4cyli_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
}
#end // ifndef (_2_dash_4cylc_dot_dat)


//// Primitive box4-2p.dat
#ifndef (box4_dash_2p_dot_dat)
#declare box4_dash_2p_dot_dat = object {
// Box with 4 Faces without 2 Parallel Edges
// Name: box4-2p.dat
// Author: Guy Vivan [guyvivan]
// !LDRAW_ORG Primitive UPDATE 2009-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2009-05-02 [PTadmin] Official Update 2009-01
	mesh {
		triangle { <1,1,-1>, <-1,1,-1>, <-1,1,1> }
		triangle { <-1,1,1>, <1,1,1>, <1,1,-1> }
		triangle { <-1,1,1>, <-1,0,1>, <1,0,1> }
		triangle { <1,0,1>, <1,1,1>, <-1,1,1> }
		triangle { <-1,1,-1>, <-1,0,-1>, <-1,0,1> }
		triangle { <-1,0,1>, <-1,1,1>, <-1,1,-1> }
		triangle { <1,1,1>, <1,0,1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,1,-1>, <1,1,1> }
	}
}
#end // ifndef (box4_dash_2p_dot_dat)


//// Part s/61976s01.dat
#ifndef (s_slash_61976s01_dot_dat)
#declare s_slash_61976s01_dot_dat = #if (L3Quality = 0) box { <-14,-9.45667,0>, <26.2516,57,12> } #else union {
// ~Minifig Satchel - Half
// Name: s\61976s01.dat
// Author: Philippe Hurbain [Philo]
// !LDRAW_ORG Subpart UPDATE 2011-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2011-07-25 [PTadmin] Official Update 2011-01
// BFC INVERTNEXT
	object { _48_slash_1_dash_8cyli_dot_dat matrix <-51.4015,25.9572,0,0,0,2,22.2236,60.037,0,41.074,-27.811,10> }
	object { _48_slash_1_dash_8cyli_dot_dat matrix <-55.073,27.8112,0,0,0,2,23.811,64.3253,0,41.074,-27.811,10> }
	object { _48_slash_1_dash_8rin14_dot_dat matrix <-3.6715,1.8541,0,0,0,1,1.5874,4.2884,0,41.074,-27.811,10> }
	object { _48_slash_1_dash_8rin14_dot_dat matrix <-3.6715,1.8541,0,0,0,-1,1.5874,4.2884,0,41.074,-27.811,12> }
// Shoulder
	mesh {
		triangle { <-10.328,-1.854,5>, <-10.328,0,0>, <-10.328,0,10> }
		triangle { <-10.328,0,10>, <-10.328,-1.854,10>, <-10.328,-1.854,5> }
		triangle { <-10.328,-3.504,1>, <-10.328,-3.504,0>, <-10.328,0,0> }
		triangle { <-10.328,0,0>, <-10.328,-1.854,5>, <-10.328,-3.504,1> }
		triangle { <-14,-1.854,5>, <-14,0,0>, <-14,-3.504,0> }
		triangle { <-14,-3.504,0>, <-14,-3.504,1>, <-14,-1.854,5> }
		triangle { <-14,-1.854,12>, <-14,0,12>, <-14,0,0> }
		triangle { <-14,0,0>, <-14,-1.854,5>, <-14,-1.854,12> }
	}
	object { rect3_dot_dat matrix <1.836,0,0,0,1,0,0,0,3.5,-12.164,-1.854,8.5> }
	object { rect2a_dot_dat matrix <0,0,5,0,-1,0,1.836,0,0,-12.164,0,5> }
	object { rect2p_dot_dat matrix <0,0.825,2,0,0.924439,-0.853585,-1.836,0,0,-12.164,-2.679,3> }
	object { rect2p_dot_dat matrix <0,0,0.5,0,1,0,-1.836,0,0,-12.164,-3.504,0.5> }
	mesh {
		triangle { <-14,0,12>, <-14,-1.854,12>, <-10.328,-1.854,12> }
// flap
	}
	object { rect3_dot_dat matrix <1.5,0,0,0,1,0,0,0,5,20.5,32,5> }
	mesh {
		triangle { <22,32,10>, <22,32,0>, <25,35,0> }
		triangle { <25,35,0>, <25,35,10.5>, <22,32,10> }
		triangle { <25,35,10.5>, <25,35,10>, <25.618,38.993,10.284> }
		triangle { <25.618,38.993,10.284>, <25.571,38.714,10.786>, <25,35,10.5> }
		triangle { <25.618,38.993,10.284>, <25.904,40.993,10.427>, <25.571,38.714,10.786> }
		triangle { <25.904,40.993,10.427>, <25.857,40.571,10.929>, <25.571,38.714,10.786> }
		triangle { <25.904,40.993,10.427>, <26,42,10.5>, <25.857,40.571,10.929> }
		triangle { <26,42,10.5>, <26,41.5,11>, <25.857,40.571,10.929> }
		triangle { <25,35,7>, <25.843,39.249,6.999>, <25,35,10> }
		triangle { <25.843,39.249,6.999>, <25.618,38.993,10.284>, <25,35,10> }
		triangle { <25.618,38.993,10.284>, <25.843,39.249,6.999>, <26.129,41.392,6.999> }
		triangle { <26.129,41.392,6.999>, <25.904,40.993,10.427>, <25.618,38.993,10.284> }
		triangle { <26.129,41.392,6.999>, <26,42.5,7>, <25.904,40.993,10.427> }
		triangle { <26,42.5,7>, <26,42,10.5>, <25.904,40.993,10.427> }
		triangle { <25,35,7>, <25,35,0>, <25.893,39.243,0> }
		triangle { <25.893,39.243,0>, <25.843,39.249,6.999>, <25,35,7> }
		triangle { <25.893,39.243,0>, <26.179,41.386,0>, <26.129,41.392,6.999> }
		triangle { <26.129,41.392,6.999>, <25.843,39.249,6.999>, <25.893,39.243,0> }
		triangle { <26.179,41.386,0>, <26,42.5,0>, <26.129,41.392,6.999> }
		triangle { <26,42.5,0>, <26,42.5,7>, <26.129,41.392,6.999> }
	}
	object { _4_dash_4con0_dot_dat matrix <-0.0695,-0.4951,-0.0024,0.2964,-0.0417,0.0208,0.0347,-0.0024,-0.4988,25.851,40.074,9> }
// bag
	mesh {
		triangle { <25,41.5,9>, <25,42,0>, <26,55,0> }
		triangle { <26,55,0>, <26,55,8>, <25,41.5,9> }
		triangle { <25,57,10>, <24,41,10>, <26,55,8> }
		triangle { <24,41,10>, <25,41.5,9>, <26,55,8> }
		triangle { <26,55,8>, <26,55,0>, <25,57,0> }
		triangle { <25,57,0>, <25,57,10>, <26,55,8> }
		triangle { <19,57,10>, <19,57,0>, <19,55,0> }
		triangle { <19,55,0>, <19,55,8>, <19,57,10> }
		triangle { <19,55,8>, <19,36,8>, <19,32,10> }
		triangle { <19,32,10>, <19,57,10>, <19,55,8> }
		triangle { <19,32,0>, <19,32,10>, <19,36,8> }
		triangle { <19,36,8>, <19,36,0>, <19,32,0> }
	}
	object { rect3_dot_dat matrix <-3,0,0,0,-1,0,0,0,5,22,57,5> }
	mesh {
		triangle { <19,57,10>, <19,41,10>, <24,41,10> }
		triangle { <24,41,10>, <25,57,10>, <19,57,10> }
		triangle { <26,42,10.5>, <24,42,9.2>, <24,41,10> }
		triangle { <26,42,10.5>, <24,41,10>, <26,41.5,11> }
		triangle { <26,42.5,7>, <25,42.5,7>, <26,42,10.5> }
		triangle { <25,42.5,7>, <24,42,9.2>, <26,42,10.5> }
	}
	object { rect1_dot_dat matrix <0.5,0,0,0,-1,0,0,0,-3.5,25.5,42.5,3.5> }
	mesh {
		triangle { <22,32,10>, <24,41,10>, <20,41,10> }
		triangle { <20,41,10>, <19,32,10>, <22,32,10> }
		triangle { <25,35,10.5>, <24,41,10>, <22,32,10> }
		triangle { <26,41.5,11>, <24,41,10>, <25,35,10.5> }
// BFC INVERTNEXT
	}
	object { box4_dash_4a_dot_dat matrix <0,-9.5,0,5,0,0,0,0,4,19,45.5,4> }
	object { rect_dot_dat matrix <0,0,0.25,-0.947035,-0.190849,0,0.7365,-2.172,0,19.7055,35.167,11.75> }
	object { _2_dash_4cylc_dot_dat matrix <0.7363,-2.1716,0,0,0,-1.5,2.1716,0.7363,0,19.706,35.167,11.5> }
	object { box4_dash_2p_dot_dat matrix <0.8,0,0,0,3.68,0,0,0,0.5,19.8,37.32,10.5> }
}
#end
#end // ifndef (s_slash_61976s01_dot_dat)


//// Part 61976.dat
#ifndef (_61976_dot_dat)
#declare _61976_dot_dat = #if (L3Quality = 0) box { <-14,-9.45667,-12>, <26.2516,57,12> } #else union {
// Minifig Satchel
// Name: 61976.dat
// Author: Philippe Hurbain [Philo]
// !LDRAW_ORG Part UPDATE 2011-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !CATEGORY Minifig Accessory
// !HISTORY 2011-07-25 [PTadmin] Official Update 2011-01
	object { s_slash_61976s01_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
	object { s_slash_61976s01_dot_dat matrix <1,0,0,0,1,0,0,0,-1,0,0,0> }
}
#end
#end // ifndef (_61976_dot_dat)


//// Model sidebag.ldr
#ifndef (sidebag_dot_ldr)
#declare sidebag_dot_ldr = object {
// untitled model
// Name:
// Author: Irmo
	// 1 70  120 -96 0  1 0 0  0 1 0  -0 0 1 61976.dat
	object {
		_61976_dot_dat
		matrix <1-L3SW/40.2516,0,0,0,1-L3SW/66.4567,0,0,0,1-L3SW/24,L3SW/6.57083,L3SW/2.79562,0>
		matrix <1,0,-0,0,1,0,0,0,1,120,-96,0>
		material { L3Color70 }
	}
}
#end // ifndef (sidebag_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <106,-105.457,-12>;
#declare L3ModelBBoxMax = <146.252,-39,12>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <126.126,-72.2283,0>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <40.2516,66.4567,24>
#declare L3FloorY = L3ModelBBoxMax.y;

//// Camera
// L3P's automatic camera positioning was based on the following:
// L3Latitude=30
// L3Longitude=45
// L3Radius=80.2695
// L3PercentageBack=0
// L3ViewingAngle=67.3801
// L3RollAngle=0
// L3AspectRatio=4/3
// If changed below, objects may no longer fit into the view.
camera {
	#declare L3PercentageBack = 0; // Percentage of radius
	#declare L3Orthographic = 0; // Set to 1 for orthographic view
	#declare L3ViewingAngle = 67.3801; // degrees
	#declare L3RollAngle = 0; // degrees
	#declare L3AspectRatio = 4/3;
	#declare L3Sky = -y;
	#declare L3StereoAngle = 5; // degrees
	//5 degrees corresponds to a distance between eyes (stereo cameras)
	//of 1/12 of distance to model.
	#declare L3StereoView = 0; // Normal view
	//Uncomment either two lines below to make stereo images:
	//#declare L3StereoView = -L3StereoAngle/2; // Left view
	//#declare L3StereoView =  L3StereoAngle/2; // Right view

	#if (version >= 3.5)
		#if (abs(L3AspectRatio-image_width/image_height) > 0.01)
			#error "L3AspectRatio does not match image size. Select a correct image size or use option -car<ar>."
		#end
	#end

	sky      L3Sky
	right    -L3AspectRatio*x
	#if (L3Orthographic)

		#error "* * doesn't work yet..."

		orthographic
		#declare L3LookAt = <126.126,-72.2283,0>; // BBox center (not -cla)
		#declare L3OrthoScale = (1+L3PercentageBack/100.0)*80.2695;
		#declare L3Location = L3LookAt - 2000*<-0.612372,0.5,0.612372>;
		location L3Location
		scale    L3OrthoScale
	#else
		#declare L3LookAt = <129.012,-70.9038,1.80499>; // Calculated (not -cla)
		#declare L3Location = <178.167,-111.039,-47.3499>;
		#declare L3Location = L3Location + L3PercentageBack/100.0*(L3Location-L3LookAt);
		//#if (L3StereoView)
		//	#declare L3Location = L3LookAt + vaxis_rotate(L3Location-L3LookAt, <-0.353553,-0.866025,0.353553>, L3StereoView);
		//#end
		angle    L3ViewingAngle
		location L3Location
	#end
	look_at  L3LookAt
	rotate   <0,1e-5,0> // Prevent gap between adjacent quads

#declare Closer = L3LookAt+0.1*(L3Location-L3LookAt);

	translate -L3Location
	#declare vx=vaxis_rotate(x,L3LookAt-L3Location,L3RollAngle);
	#declare vy=vaxis_rotate(y,L3LookAt-L3Location,L3RollAngle);
	#declare vz=vaxis_rotate(z,L3LookAt-L3Location,L3RollAngle);
	matrix <vx.x,vx.y,vx.z, vy.x,vy.y,vy.z, vz.x,vz.y,vz.z, 0,0,0>
	translate L3Location

#if (L3StereoView)
	translate -L3Location
	#declare Ver=<-0.353553,-0.866025,0.353553>;
	#declare vx=vaxis_rotate(x,Ver,L3StereoView);
	#declare vy=vaxis_rotate(y,Ver,L3StereoView);
	#declare vz=vaxis_rotate(z,Ver,L3StereoView);
	matrix <vx.x,vx.y,vx.z, vy.x,vy.y,vy.z, vz.x,vz.y,vz.z, 0,0,0>
	#declare L3Location = L3LookAt + vaxis_rotate(L3Location-L3LookAt, Ver, L3StereoView);
	translate L3Location
#end


//////////////////////////////////////////////////
// What about L3RollAngle... before/after stereo ?
//////////////////////////////////////////////////

	//Rotate model around its center:
	//translate -L3ModelBBoxCenter
	//rotate    <0,360*clock,0>
	//translate L3ModelBBoxCenter
}

//// Lights
light_source {
	<126.126,-128.987,-56.7591>  // Latitude,Longitude,Radius: 45,0,80.2695
	color rgb <1,1,1>
}
light_source {
	<186.328,-112.363,34.7577>  // Latitude,Longitude,Radius: 30,120,80.2695
	color rgb <1,1,1>
}
light_source {
	<91.3681,-141.744,20.0674>  // Latitude,Longitude,Radius: 60,-120,80.2695
	color rgb <1,1,1>
}

//// ModelObject sidebag.ldr
object { sidebag_dot_ldr }



//// Statistics
//               PARTS             P         Total
// DAT files:        2            16            19
// POV Equivs:       -             5 (31%)
// Model has 1 parts (0 studs)

//// End
